"""Add BIA parameter tables

Revision ID: 8a1b258ce0b8
Revises: 2222d6dbed69
Create Date: 2025-06-13 17:23:01.670994

"""
import os
import sys

# Add project root to sys.path to allow for absolute imports from backend
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))
if PROJECT_ROOT not in sys.path:
    sys.path.insert(0, PROJECT_ROOT)

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
# from backend.app.database.custom_types import SQLiteUUID

# revision identifiers, used by Alembic.
revision: str = '8a1b258ce0b8'
down_revision: Union[str, None] = '2222d6dbed69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column('bia_impact_scale_levels', sa.Column('level_value', sa.Integer(), nullable=False))
    # op.add_column('bia_impact_scale_levels', sa.Column('level_name', sa.String(length=255), nullable=False))
    # op.add_column('bia_impact_scale_levels', sa.Column('is_active', sa.Boolean(), nullable=False))
    # op.add_column('bia_impact_scale_levels', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    # op.add_column('bia_impact_scale_levels', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bia_impact_scale_levels', sa.Column('impact_scale_id', SQLiteUUID(), nullable=False))
    op.add_column('bia_impact_scale_levels', sa.Column('created_by_id', SQLiteUUID(), nullable=True))
    op.add_column('bia_impact_scale_levels', sa.Column('updated_by_id', SQLiteUUID(), nullable=True))
    op.create_index(op.f('ix_bia_impact_scale_levels_id'), 'bia_impact_scale_levels', ['id'], unique=False)
    op.create_index(op.f('ix_bia_impact_scale_levels_impact_scale_id'), 'bia_impact_scale_levels', ['impact_scale_id'], unique=False)
    op.create_index(op.f('ix_bia_impact_scale_levels_is_deleted'), 'bia_impact_scale_levels', ['is_deleted'], unique=False)
    op.drop_constraint(op.f('bia_impact_scale_levels_ibfk_1'), 'bia_impact_scale_levels', type_='foreignkey')
    op.create_foreign_key(None, 'bia_impact_scale_levels', 'bia_impact_scales', ['impact_scale_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'bia_impact_scale_levels', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'bia_impact_scale_levels', 'users', ['updated_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('bia_impact_scale_levels', 'scale_id')
    op.drop_column('bia_impact_scale_levels', 'name')
    op.drop_column('bia_impact_scale_levels', 'max_range')
    op.drop_column('bia_impact_scale_levels', 'score')
    op.drop_column('bia_impact_scale_levels', 'min_range')
    op.add_column('bia_impact_scales', sa.Column('scale_name', sa.String(length=255), nullable=False))
    op.add_column('bia_impact_scales', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('bia_impact_scales', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('bia_impact_scales', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bia_impact_scales', sa.Column('created_by_id', SQLiteUUID(), nullable=True))
    op.add_column('bia_impact_scales', sa.Column('updated_by_id', SQLiteUUID(), nullable=True))
    op.drop_index(op.f('name'), table_name='bia_impact_scales')
    op.create_index(op.f('ix_bia_impact_scales_id'), 'bia_impact_scales', ['id'], unique=False)
    op.create_index(op.f('ix_bia_impact_scales_is_deleted'), 'bia_impact_scales', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_bia_impact_scales_organization_id'), 'bia_impact_scales', ['organization_id'], unique=False)
    op.create_index(op.f('ix_bia_impact_scales_scale_name'), 'bia_impact_scales', ['scale_name'], unique=False)
    op.drop_constraint(op.f('bia_impact_scales_ibfk_1'), 'bia_impact_scales', type_='foreignkey')
    op.create_foreign_key(None, 'bia_impact_scales', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'bia_impact_scales', 'organizations', ['organization_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'bia_impact_scales', 'users', ['updated_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('bia_impact_scales', 'rating_type')
    op.drop_column('bia_impact_scales', 'name')
    op.add_column('bia_timeframes', sa.Column('timeframe_name', sa.String(length=255), nullable=False))
    op.add_column('bia_timeframes', sa.Column('sequence_order', sa.Integer(), nullable=False))
    op.add_column('bia_timeframes', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('bia_timeframes', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('bia_timeframes', sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('bia_timeframes', sa.Column('created_by_id', SQLiteUUID(), nullable=True))
    op.add_column('bia_timeframes', sa.Column('updated_by_id', SQLiteUUID(), nullable=True))
    op.drop_index(op.f('name'), table_name='bia_timeframes')
    op.create_index(op.f('ix_bia_timeframes_id'), 'bia_timeframes', ['id'], unique=False)
    op.create_index(op.f('ix_bia_timeframes_is_deleted'), 'bia_timeframes', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_bia_timeframes_organization_id'), 'bia_timeframes', ['organization_id'], unique=False)
    op.create_index(op.f('ix_bia_timeframes_timeframe_name'), 'bia_timeframes', ['timeframe_name'], unique=False)
    op.drop_constraint(op.f('bia_timeframes_ibfk_1'), 'bia_timeframes', type_='foreignkey')
    op.create_foreign_key(None, 'bia_timeframes', 'organizations', ['organization_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'bia_timeframes', 'users', ['created_by_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'bia_timeframes', 'users', ['updated_by_id'], ['id'], ondelete='SET NULL')
    op.drop_column('bia_timeframes', 'name')
    op.drop_column('bia_timeframes', 'sequence')
    op.create_foreign_key('fk_process_updated_by', 'processes', 'users', ['updated_by_id'], ['id'], use_alter=True)
    op.create_foreign_key('fk_process_created_by', 'processes', 'users', ['created_by_id'], ['id'], use_alter=True)
    op.drop_index(op.f('ix_people_departmentId'), table_name='users')
    op.drop_index(op.f('ix_people_locationId'), table_name='users')
    op.drop_index(op.f('uq_person_organization_email'), table_name='users')
    op.drop_constraint(op.f('fk_users_organizationId_organizations'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_departmentId_departments'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_locationId_locations'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'vendors', 'users', ['createdBy'], ['id'], ondelete='SET NULL', use_alter=True)
    op.create_foreign_key(None, 'vendors', 'users', ['updatedBy'], ['id'], ondelete='SET NULL', use_alter=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vendors', type_='foreignkey')
    op.drop_constraint(None, 'vendors', type_='foreignkey')
    op.create_foreign_key(op.f('fk_users_locationId_locations'), 'users', 'locations', ['locationId'], ['id'])
    op.create_foreign_key(op.f('fk_users_departmentId_departments'), 'users', 'departments', ['departmentId'], ['id'])
    op.create_foreign_key(op.f('fk_users_organizationId_organizations'), 'users', 'organizations', ['organizationId'], ['id'])
    op.create_index(op.f('uq_person_organization_email'), 'users', ['organizationId', 'email'], unique=True)
    op.create_index(op.f('ix_people_locationId'), 'users', ['locationId'], unique=False)
    op.create_index(op.f('ix_people_departmentId'), 'users', ['departmentId'], unique=False)
    op.drop_constraint('fk_process_created_by', 'processes', type_='foreignkey')
    op.drop_constraint('fk_process_updated_by', 'processes', type_='foreignkey')
    op.add_column('bia_timeframes', sa.Column('sequence', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('bia_timeframes', sa.Column('name', mysql.VARCHAR(length=255), nullable=False))
    op.drop_constraint(None, 'bia_timeframes', type_='foreignkey')
    op.drop_constraint(None, 'bia_timeframes', type_='foreignkey')
    op.drop_constraint(None, 'bia_timeframes', type_='foreignkey')
    op.create_foreign_key(op.f('bia_timeframes_ibfk_1'), 'bia_timeframes', 'organizations', ['organization_id'], ['id'])
    op.drop_index(op.f('ix_bia_timeframes_timeframe_name'), table_name='bia_timeframes')
    op.drop_index(op.f('ix_bia_timeframes_organization_id'), table_name='bia_timeframes')
    op.drop_index(op.f('ix_bia_timeframes_is_deleted'), table_name='bia_timeframes')
    op.drop_index(op.f('ix_bia_timeframes_id'), table_name='bia_timeframes')
    op.create_index(op.f('name'), 'bia_timeframes', ['name'], unique=True)
    op.drop_column('bia_timeframes', 'updated_by_id')
    op.drop_column('bia_timeframes', 'created_by_id')
    op.drop_column('bia_timeframes', 'deleted_at')
    op.drop_column('bia_timeframes', 'is_deleted')
    op.drop_column('bia_timeframes', 'is_active')
    op.drop_column('bia_timeframes', 'sequence_order')
    op.drop_column('bia_timeframes', 'timeframe_name')
    op.add_column('bia_impact_scales', sa.Column('name', mysql.VARCHAR(length=255), nullable=False))
    op.add_column('bia_impact_scales', sa.Column('rating_type', mysql.ENUM('QUALITATIVE', 'QUANTITATIVE'), nullable=False))
    op.drop_constraint(None, 'bia_impact_scales', type_='foreignkey')
    op.drop_constraint(None, 'bia_impact_scales', type_='foreignkey')
    op.drop_constraint(None, 'bia_impact_scales', type_='foreignkey')
    op.create_foreign_key(op.f('bia_impact_scales_ibfk_1'), 'bia_impact_scales', 'organizations', ['organization_id'], ['id'])
    op.drop_index(op.f('ix_bia_impact_scales_scale_name'), table_name='bia_impact_scales')
    op.drop_index(op.f('ix_bia_impact_scales_organization_id'), table_name='bia_impact_scales')
    op.drop_index(op.f('ix_bia_impact_scales_is_deleted'), table_name='bia_impact_scales')
    op.drop_index(op.f('ix_bia_impact_scales_id'), table_name='bia_impact_scales')
    op.create_index(op.f('name'), 'bia_impact_scales', ['name'], unique=True)
    op.drop_column('bia_impact_scales', 'updated_by_id')
    op.drop_column('bia_impact_scales', 'created_by_id')
    op.drop_column('bia_impact_scales', 'deleted_at')
    op.drop_column('bia_impact_scales', 'is_deleted')
    op.drop_column('bia_impact_scales', 'is_active')
    op.drop_column('bia_impact_scales', 'scale_name')
    op.add_column('bia_impact_scale_levels', sa.Column('min_range', mysql.FLOAT(), nullable=True))
    op.add_column('bia_impact_scale_levels', sa.Column('score', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('bia_impact_scale_levels', sa.Column('max_range', mysql.FLOAT(), nullable=True))
    op.add_column('bia_impact_scale_levels', sa.Column('name', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('bia_impact_scale_levels', sa.Column('scale_id', mysql.CHAR(length=36), nullable=False))
    op.drop_constraint(None, 'bia_impact_scale_levels', type_='foreignkey')
    op.drop_constraint(None, 'bia_impact_scale_levels', type_='foreignkey')
    op.drop_constraint(None, 'bia_impact_scale_levels', type_='foreignkey')
    op.create_foreign_key(op.f('bia_impact_scale_levels_ibfk_1'), 'bia_impact_scale_levels', 'bia_impact_scales', ['scale_id'], ['id'])
    op.drop_index(op.f('ix_bia_impact_scale_levels_is_deleted'), table_name='bia_impact_scale_levels')
    op.drop_index(op.f('ix_bia_impact_scale_levels_impact_scale_id'), table_name='bia_impact_scale_levels')
    op.drop_index(op.f('ix_bia_impact_scale_levels_id'), table_name='bia_impact_scale_levels')
    op.drop_column('bia_impact_scale_levels', 'updated_by_id')
    op.drop_column('bia_impact_scale_levels', 'created_by_id')
    op.drop_column('bia_impact_scale_levels', 'impact_scale_id')
    op.drop_column('bia_impact_scale_levels', 'deleted_at')
    op.drop_column('bia_impact_scale_levels', 'is_deleted')
    op.drop_column('bia_impact_scale_levels', 'is_active')
    op.drop_column('bia_impact_scale_levels', 'level_name')
    op.drop_column('bia_impact_scale_levels', 'level_value')
    # ### end Alembic commands ###
