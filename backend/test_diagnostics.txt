INFO:backend.app.tests.conftest:Pytest configuration complete. Logging initialized.
INFO:backend.app.tests.conftest:ASYNC_DATABASE_URL set to: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite
INFO:backend.app.tests.conftest:DATABASE_URL set to: sqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite
--- app.db.base DIAGNOSTICS ---
Base class in app.db.base: <class 'sqlalchemy.orm.decl_api.Base'>
ID of Base class in app.db.base: 4671134800
-----------------------------
============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-8.4.0, pluggy-1.6.0
rootdir: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend
configfile: pytest.ini
plugins: asyncio-0.23.8, anyio-4.9.0
asyncio: mode=auto
collected 1 item

app/tests/services/test_bia_impact_criteria_service.py::TestBIAImpactCriteriaService::test_create_criterion_with_levels INFO:backend.app.tests.conftest:db_engine: START. Test session logs are being written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log

-------------------------------- live log setup --------------------------------
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: START. Test session logs are being written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log (conftest.py:213)
INFO:backend.app.tests.conftest:db_engine: Initializing for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite with MINIMAL setup.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Initializing for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite with MINIMAL setup. (conftest.py:219)
INFO:backend.app.tests.conftest:db_engine: Deleting existing test database: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Deleting existing test database: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite (conftest.py:225)
INFO:backend.app.tests.conftest:db_engine: Creating test-specific AsyncEngine with StaticPool for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Creating test-specific AsyncEngine with StaticPool for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite (conftest.py:234)
INFO:backend.app.tests.conftest:db_engine: Test-specific engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> created. PRAGMAs enabled. Table creation and seeding remain disabled.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Test-specific engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> created. PRAGMAs enabled. Table creation and seeding remain disabled. (conftest.py:241)
INFO:backend.app.tests.conftest:Successfully set up PRAGMA event listener for SQLite connections via sync_engine.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Successfully set up PRAGMA event listener for SQLite connections via sync_engine. (conftest.py:266)
INFO:backend.app.tests.conftest:db_engine: SQLite PRAGMA event listener configured for engine.sync_engine (for async_engine 4592251392).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: SQLite PRAGMA event listener configured for engine.sync_engine (for async_engine 4592251392). (conftest.py:268)
INFO:backend.app.tests.conftest:db_engine: Priming engine 4592251392 to establish initial connection and apply PRAGMAs.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Priming engine 4592251392 to establish initial connection and apply PRAGMAs. (conftest.py:271)
INFO:backend.app.tests.conftest:set_sqlite_pragmas: Configuring PRAGMAs for new connection 4592668528 for async_engine 4592251392.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: set_sqlite_pragmas: Configuring PRAGMAs for new connection 4592668528 for async_engine 4592251392. (conftest.py:247)
INFO:backend.app.tests.conftest:set_sqlite_pragmas: PRAGMAs (WAL, foreign_keys, busy_timeout) set for connection 4592668528.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: set_sqlite_pragmas: PRAGMAs (WAL, foreign_keys, busy_timeout) set for connection 4592668528. (conftest.py:256)
2025-06-18 17:59:47,120 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,120 INFO sqlalchemy.engine.Engine SELECT 1
INFO:sqlalchemy.engine.Engine:SELECT 1
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT 1 (base.py:1895)
2025-06-18 17:59:47,121 INFO sqlalchemy.engine.Engine [generated in 0.00009s] ()
INFO:sqlalchemy.engine.Engine:[generated in 0.00009s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00009s] () (base.py:1900)
INFO:backend.app.tests.conftest:db_engine: Successfully primed engine 4592251392 with connection 4592698768. PRAGMAs applied to this connection.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Successfully primed engine 4592251392 with connection 4592698768. PRAGMAs applied to this connection. (conftest.py:276)
2025-06-18 17:59:47,121 INFO sqlalchemy.engine.Engine COMMIT
INFO:sqlalchemy.engine.Engine:COMMIT
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
INFO:backend.app.tests.conftest:db_engine: Creating all tables for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> using conn.run_sync...
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Creating all tables for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> using conn.run_sync... (conftest.py:282)
2025-06-18 17:59:47,121 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,121 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("user_roles")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("user_roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("user_roles") (base.py:1895)
2025-06-18 17:59:47,121 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,125 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("user_roles")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("user_roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("user_roles") (base.py:1895)
2025-06-18 17:59:47,125 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,125 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("users")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("users") (base.py:1895)
2025-06-18 17:59:47,125 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("users")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("users")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("users") (base.py:1895)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("organizations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("organizations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("organizations") (base.py:1895)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("organizations")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("organizations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("organizations") (base.py:1895)
2025-06-18 17:59:47,126 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("role_permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("role_permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("role_permissions") (base.py:1895)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("role_permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("role_permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("role_permissions") (base.py:1895)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("permissions") (base.py:1895)
2025-06-18 17:59:47,127 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("permissions") (base.py:1895)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("roles")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("roles") (base.py:1895)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("roles")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("roles") (base.py:1895)
2025-06-18 17:59:47,128 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("department_locations_association")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("department_locations_association")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("department_locations_association") (base.py:1895)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("department_locations_association")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("department_locations_association")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("department_locations_association") (base.py:1895)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("departments")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("departments")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("departments") (base.py:1895)
2025-06-18 17:59:47,129 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("departments")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("departments")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("departments") (base.py:1895)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_categories")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_categories")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_categories") (base.py:1895)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_categories")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_categories")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_categories") (base.py:1895)
2025-06-18 17:59:47,130 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_applications")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_applications") (base.py:1895)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("process_applications")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("process_applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_applications") (base.py:1895)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("applications")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("applications") (base.py:1895)
2025-06-18 17:59:47,131 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("applications")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("applications") (base.py:1895)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_locations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_locations") (base.py:1895)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("process_locations")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("process_locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_locations") (base.py:1895)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_dependencies")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_dependencies")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_dependencies") (base.py:1895)
2025-06-18 17:59:47,132 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("process_dependencies")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("process_dependencies")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_dependencies") (base.py:1895)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("processes")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("processes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("processes") (base.py:1895)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("processes")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("processes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("processes") (base.py:1895)
2025-06-18 17:59:47,133 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("locations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("locations") (base.py:1895)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("locations")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("locations") (base.py:1895)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("vendors")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("vendors")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("vendors") (base.py:1895)
2025-06-18 17:59:47,134 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("vendors")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("vendors")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("vendors") (base.py:1895)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_scales")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_scales")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scales") (base.py:1895)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_impact_scales")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_impact_scales")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_scales") (base.py:1895)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,135 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_scale_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_scale_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scale_levels") (base.py:1895)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_impact_scale_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_impact_scale_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_scale_levels") (base.py:1895)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_timeframes")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_timeframes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_timeframes") (base.py:1895)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,136 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_timeframes")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_timeframes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_timeframes") (base.py:1895)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_criteria")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_criteria")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criteria") (base.py:1895)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_impact_criteria")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_impact_criteria")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_criteria") (base.py:1895)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_criterion_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_criterion_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criterion_levels") (base.py:1895)
2025-06-18 17:59:47,137 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,138 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("bia_impact_criterion_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA temp.table_info("bia_impact_criterion_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_criterion_levels") (base.py:1895)
2025-06-18 17:59:47,138 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47,139 INFO sqlalchemy.engine.Engine 
CREATE TABLE organizations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	industry VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE organizations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	industry VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE organizations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	industry VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)

 (base.py:1895)
2025-06-18 17:59:47,139 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,141 INFO sqlalchemy.engine.Engine CREATE INDEX ix_organizations_id ON organizations (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_organizations_id ON organizations (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_organizations_id ON organizations (id) (base.py:1895)
2025-06-18 17:59:47,141 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,141 INFO sqlalchemy.engine.Engine 
CREATE TABLE permissions (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE permissions (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE permissions (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (id)
)

 (base.py:1895)
2025-06-18 17:59:47,141 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,142 INFO sqlalchemy.engine.Engine CREATE INDEX ix_permissions_id ON permissions (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_permissions_id ON permissions (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_permissions_id ON permissions (id) (base.py:1895)
2025-06-18 17:59:47,142 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,143 INFO sqlalchemy.engine.Engine CREATE UNIQUE INDEX ix_permissions_name ON permissions (name)
INFO:sqlalchemy.engine.Engine:CREATE UNIQUE INDEX ix_permissions_name ON permissions (name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE UNIQUE INDEX ix_permissions_name ON permissions (name) (base.py:1895)
2025-06-18 17:59:47,143 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,143 INFO sqlalchemy.engine.Engine 
CREATE TABLE departments (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	number_of_team_members INTEGER, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	department_head_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(department_head_id) REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE departments (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	number_of_team_members INTEGER, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	department_head_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(department_head_id) REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE departments (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	number_of_team_members INTEGER, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	department_head_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(department_head_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,143 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine CREATE INDEX ix_departments_id ON departments (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_departments_id ON departments (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_departments_id ON departments (id) (base.py:1895)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine CREATE INDEX ix_departments_is_deleted ON departments (is_deleted)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_departments_is_deleted ON departments (is_deleted)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_departments_is_deleted ON departments (is_deleted) (base.py:1895)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine 
CREATE TABLE roles (
	id CHAR(32) NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	organization_id CHAR(32) NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE roles (
	id CHAR(32) NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	organization_id CHAR(32) NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE roles (
	id CHAR(32) NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	organization_id CHAR(32) NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47,144 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,145 INFO sqlalchemy.engine.Engine CREATE INDEX ix_roles_id ON roles (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_roles_id ON roles (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_roles_id ON roles (id) (base.py:1895)
2025-06-18 17:59:47,145 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,145 INFO sqlalchemy.engine.Engine CREATE INDEX ix_roles_organization_id ON roles (organization_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_roles_organization_id ON roles (organization_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_roles_organization_id ON roles (organization_id) (base.py:1895)
2025-06-18 17:59:47,145 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_categories (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT uq_bia_category_name_organization UNIQUE (name, organization_id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_categories (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT uq_bia_category_name_organization UNIQUE (name, organization_id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_categories (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT uq_bia_category_name_organization UNIQUE (name, organization_id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id)
)

 (base.py:1895)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine 
CREATE TABLE locations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	address_line1 VARCHAR(255) NOT NULL, 
	address_line2 VARCHAR(255), 
	city VARCHAR(100) NOT NULL, 
	state_province VARCHAR(100), 
	postal_code VARCHAR(20), 
	country VARCHAR(100) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE locations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	address_line1 VARCHAR(255) NOT NULL, 
	address_line2 VARCHAR(255), 
	city VARCHAR(100) NOT NULL, 
	state_province VARCHAR(100), 
	postal_code VARCHAR(20), 
	country VARCHAR(100) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE locations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	address_line1 VARCHAR(255) NOT NULL, 
	address_line2 VARCHAR(255), 
	city VARCHAR(100) NOT NULL, 
	state_province VARCHAR(100), 
	postal_code VARCHAR(20), 
	country VARCHAR(100) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine CREATE INDEX ix_locations_name ON locations (name)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_locations_name ON locations (name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_locations_name ON locations (name) (base.py:1895)
2025-06-18 17:59:47,146 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,147 INFO sqlalchemy.engine.Engine CREATE INDEX ix_locations_id ON locations (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_locations_id ON locations (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_locations_id ON locations (id) (base.py:1895)
2025-06-18 17:59:47,147 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,147 INFO sqlalchemy.engine.Engine CREATE INDEX "ix_locations_organizationId" ON locations ("organizationId")
INFO:sqlalchemy.engine.Engine:CREATE INDEX "ix_locations_organizationId" ON locations ("organizationId")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_locations_organizationId" ON locations ("organizationId") (base.py:1895)
2025-06-18 17:59:47,147 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine 
CREATE TABLE vendors (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	contact_person VARCHAR(255), 
	contact_email VARCHAR(255), 
	contact_phone VARCHAR(50), 
	service_provided TEXT, 
	criticality VARCHAR(6) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE vendors (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	contact_person VARCHAR(255), 
	contact_email VARCHAR(255), 
	contact_phone VARCHAR(50), 
	service_provided TEXT, 
	criticality VARCHAR(6) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE vendors (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	contact_person VARCHAR(255), 
	contact_email VARCHAR(255), 
	contact_phone VARCHAR(50), 
	service_provided TEXT, 
	criticality VARCHAR(6) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine CREATE INDEX ix_vendors_name ON vendors (name)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_vendors_name ON vendors (name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_vendors_name ON vendors (name) (base.py:1895)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine CREATE INDEX ix_vendors_id ON vendors (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_vendors_id ON vendors (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_vendors_id ON vendors (id) (base.py:1895)
2025-06-18 17:59:47,148 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,149 INFO sqlalchemy.engine.Engine CREATE INDEX "ix_vendors_organizationId" ON vendors ("organizationId")
INFO:sqlalchemy.engine.Engine:CREATE INDEX "ix_vendors_organizationId" ON vendors ("organizationId")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_vendors_organizationId" ON vendors ("organizationId") (base.py:1895)
2025-06-18 17:59:47,149 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,149 INFO sqlalchemy.engine.Engine 
CREATE TABLE users (
	id CHAR(32) NOT NULL, 
	"firstName" VARCHAR(100) NOT NULL, 
	"lastName" VARCHAR(100) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	"passwordHash" VARCHAR(255), 
	"jobTitle" VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"departmentId" CHAR(32), 
	"locationId" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _user_email_organization_uc UNIQUE (email, "organizationId"), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("departmentId") REFERENCES departments (id) ON DELETE SET NULL, 
	FOREIGN KEY("locationId") REFERENCES locations (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE users (
	id CHAR(32) NOT NULL, 
	"firstName" VARCHAR(100) NOT NULL, 
	"lastName" VARCHAR(100) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	"passwordHash" VARCHAR(255), 
	"jobTitle" VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"departmentId" CHAR(32), 
	"locationId" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _user_email_organization_uc UNIQUE (email, "organizationId"), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("departmentId") REFERENCES departments (id) ON DELETE SET NULL, 
	FOREIGN KEY("locationId") REFERENCES locations (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE users (
	id CHAR(32) NOT NULL, 
	"firstName" VARCHAR(100) NOT NULL, 
	"lastName" VARCHAR(100) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	"passwordHash" VARCHAR(255), 
	"jobTitle" VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"departmentId" CHAR(32), 
	"locationId" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _user_email_organization_uc UNIQUE (email, "organizationId"), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("departmentId") REFERENCES departments (id) ON DELETE SET NULL, 
	FOREIGN KEY("locationId") REFERENCES locations (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,149 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine CREATE INDEX ix_users_email ON users (email)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_users_email ON users (email)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_users_email ON users (email) (base.py:1895)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine CREATE INDEX "ix_users_departmentId" ON users ("departmentId")
INFO:sqlalchemy.engine.Engine:CREATE INDEX "ix_users_departmentId" ON users ("departmentId")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_departmentId" ON users ("departmentId") (base.py:1895)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine CREATE INDEX "ix_users_locationId" ON users ("locationId")
INFO:sqlalchemy.engine.Engine:CREATE INDEX "ix_users_locationId" ON users ("locationId")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_locationId" ON users ("locationId") (base.py:1895)
2025-06-18 17:59:47,150 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine CREATE INDEX ix_users_id ON users (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_users_id ON users (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_users_id ON users (id) (base.py:1895)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine CREATE INDEX "ix_users_organizationId" ON users ("organizationId")
INFO:sqlalchemy.engine.Engine:CREATE INDEX "ix_users_organizationId" ON users ("organizationId")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_organizationId" ON users ("organizationId") (base.py:1895)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine 
CREATE TABLE role_permissions (
	role_id CHAR(32) NOT NULL, 
	permission_id CHAR(32) NOT NULL, 
	PRIMARY KEY (role_id, permission_id), 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE, 
	FOREIGN KEY(permission_id) REFERENCES permissions (id) ON DELETE CASCADE
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE role_permissions (
	role_id CHAR(32) NOT NULL, 
	permission_id CHAR(32) NOT NULL, 
	PRIMARY KEY (role_id, permission_id), 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE, 
	FOREIGN KEY(permission_id) REFERENCES permissions (id) ON DELETE CASCADE
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE role_permissions (
	role_id CHAR(32) NOT NULL, 
	permission_id CHAR(32) NOT NULL, 
	PRIMARY KEY (role_id, permission_id), 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE, 
	FOREIGN KEY(permission_id) REFERENCES permissions (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47,151 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,152 INFO sqlalchemy.engine.Engine 
CREATE TABLE department_locations_association (
	department_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (department_id, location_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id) ON DELETE CASCADE, 
	FOREIGN KEY(location_id) REFERENCES locations (id) ON DELETE CASCADE
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE department_locations_association (
	department_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (department_id, location_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id) ON DELETE CASCADE, 
	FOREIGN KEY(location_id) REFERENCES locations (id) ON DELETE CASCADE
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE department_locations_association (
	department_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (department_id, location_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id) ON DELETE CASCADE, 
	FOREIGN KEY(location_id) REFERENCES locations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47,152 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,152 INFO sqlalchemy.engine.Engine 
CREATE TABLE user_roles (
	user_id CHAR(32) NOT NULL, 
	role_id CHAR(32) NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (user_id, role_id), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE, 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE user_roles (
	user_id CHAR(32) NOT NULL, 
	role_id CHAR(32) NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (user_id, role_id), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE, 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE user_roles (
	user_id CHAR(32) NOT NULL, 
	role_id CHAR(32) NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (user_id, role_id), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE, 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47,152 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,153 INFO sqlalchemy.engine.Engine 
CREATE TABLE applications (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	type VARCHAR(5) NOT NULL, 
	"hostedOn" VARCHAR(255), 
	workarounds TEXT, 
	"derivedRTO" VARCHAR(50), 
	status VARCHAR(8) NOT NULL, 
	version VARCHAR(50), 
	vendor VARCHAR(255), 
	criticality VARCHAR(50), 
	"organizationId" CHAR(32) NOT NULL, 
	"appOwnerId" CHAR(32), 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"createdById" CHAR(32), 
	"updatedById" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _application_name_organization_uc UNIQUE (name, "organizationId"), 
	CONSTRAINT application_type_enum CHECK (type IN ('SAAS', 'OWNED')), 
	CONSTRAINT application_status_enum CHECK (status IN ('ACTIVE', 'INACTIVE', 'ARCHIVED')), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id), 
	FOREIGN KEY("appOwnerId") REFERENCES users (id), 
	CONSTRAINT fk_application_created_by FOREIGN KEY("createdById") REFERENCES users (id) ON DELETE SET NULL, 
	CONSTRAINT fk_application_updated_by FOREIGN KEY("updatedById") REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE applications (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	type VARCHAR(5) NOT NULL, 
	"hostedOn" VARCHAR(255), 
	workarounds TEXT, 
	"derivedRTO" VARCHAR(50), 
	status VARCHAR(8) NOT NULL, 
	version VARCHAR(50), 
	vendor VARCHAR(255), 
	criticality VARCHAR(50), 
	"organizationId" CHAR(32) NOT NULL, 
	"appOwnerId" CHAR(32), 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"createdById" CHAR(32), 
	"updatedById" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _application_name_organization_uc UNIQUE (name, "organizationId"), 
	CONSTRAINT application_type_enum CHECK (type IN ('SAAS', 'OWNED')), 
	CONSTRAINT application_status_enum CHECK (status IN ('ACTIVE', 'INACTIVE', 'ARCHIVED')), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id), 
	FOREIGN KEY("appOwnerId") REFERENCES users (id), 
	CONSTRAINT fk_application_created_by FOREIGN KEY("createdById") REFERENCES users (id) ON DELETE SET NULL, 
	CONSTRAINT fk_application_updated_by FOREIGN KEY("updatedById") REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE applications (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	type VARCHAR(5) NOT NULL, 
	"hostedOn" VARCHAR(255), 
	workarounds TEXT, 
	"derivedRTO" VARCHAR(50), 
	status VARCHAR(8) NOT NULL, 
	version VARCHAR(50), 
	vendor VARCHAR(255), 
	criticality VARCHAR(50), 
	"organizationId" CHAR(32) NOT NULL, 
	"appOwnerId" CHAR(32), 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"createdById" CHAR(32), 
	"updatedById" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _application_name_organization_uc UNIQUE (name, "organizationId"), 
	CONSTRAINT application_type_enum CHECK (type IN ('SAAS', 'OWNED')), 
	CONSTRAINT application_status_enum CHECK (status IN ('ACTIVE', 'INACTIVE', 'ARCHIVED')), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id), 
	FOREIGN KEY("appOwnerId") REFERENCES users (id), 
	CONSTRAINT fk_application_created_by FOREIGN KEY("createdById") REFERENCES users (id) ON DELETE SET NULL, 
	CONSTRAINT fk_application_updated_by FOREIGN KEY("updatedById") REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,153 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,153 INFO sqlalchemy.engine.Engine 
CREATE TABLE processes (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	sla VARCHAR(255), 
	tat VARCHAR(255), 
	seasonality VARCHAR(255), 
	peak_times VARCHAR(255), 
	frequency VARCHAR(255), 
	num_team_members INTEGER, 
	rto FLOAT, 
	rpo FLOAT, 
	criticality_level VARCHAR(50), 
	department_id CHAR(32) NOT NULL, 
	process_owner_id CHAR(32), 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _process_name_department_uc UNIQUE (name, department_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id), 
	FOREIGN KEY(process_owner_id) REFERENCES users (id), 
	CONSTRAINT fk_process_created_by FOREIGN KEY(created_by_id) REFERENCES users (id), 
	CONSTRAINT fk_process_updated_by FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE processes (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	sla VARCHAR(255), 
	tat VARCHAR(255), 
	seasonality VARCHAR(255), 
	peak_times VARCHAR(255), 
	frequency VARCHAR(255), 
	num_team_members INTEGER, 
	rto FLOAT, 
	rpo FLOAT, 
	criticality_level VARCHAR(50), 
	department_id CHAR(32) NOT NULL, 
	process_owner_id CHAR(32), 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _process_name_department_uc UNIQUE (name, department_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id), 
	FOREIGN KEY(process_owner_id) REFERENCES users (id), 
	CONSTRAINT fk_process_created_by FOREIGN KEY(created_by_id) REFERENCES users (id), 
	CONSTRAINT fk_process_updated_by FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE processes (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	sla VARCHAR(255), 
	tat VARCHAR(255), 
	seasonality VARCHAR(255), 
	peak_times VARCHAR(255), 
	frequency VARCHAR(255), 
	num_team_members INTEGER, 
	rto FLOAT, 
	rpo FLOAT, 
	criticality_level VARCHAR(50), 
	department_id CHAR(32) NOT NULL, 
	process_owner_id CHAR(32), 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _process_name_department_uc UNIQUE (name, department_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id), 
	FOREIGN KEY(process_owner_id) REFERENCES users (id), 
	CONSTRAINT fk_process_created_by FOREIGN KEY(created_by_id) REFERENCES users (id), 
	CONSTRAINT fk_process_updated_by FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47,153 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,154 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_impact_scales (
	id CHAR(32) NOT NULL, 
	scale_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_impact_scales (
	id CHAR(32) NOT NULL, 
	scale_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_scales (
	id CHAR(32) NOT NULL, 
	scale_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,154 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,154 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scales_id ON bia_impact_scales (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scales_id ON bia_impact_scales (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_id ON bia_impact_scales (id) (base.py:1895)
2025-06-18 17:59:47,154 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scales_is_deleted ON bia_impact_scales (is_deleted)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scales_is_deleted ON bia_impact_scales (is_deleted)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_is_deleted ON bia_impact_scales (is_deleted) (base.py:1895)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scales_scale_name ON bia_impact_scales (scale_name)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scales_scale_name ON bia_impact_scales (scale_name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_scale_name ON bia_impact_scales (scale_name) (base.py:1895)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scales_organization_id ON bia_impact_scales (organization_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scales_organization_id ON bia_impact_scales (organization_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_organization_id ON bia_impact_scales (organization_id) (base.py:1895)
2025-06-18 17:59:47,155 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,156 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_timeframes (
	id CHAR(32) NOT NULL, 
	timeframe_name VARCHAR(255) NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_timeframes (
	id CHAR(32) NOT NULL, 
	timeframe_name VARCHAR(255) NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_timeframes (
	id CHAR(32) NOT NULL, 
	timeframe_name VARCHAR(255) NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,156 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,156 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_timeframes_is_deleted ON bia_timeframes (is_deleted)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_timeframes_is_deleted ON bia_timeframes (is_deleted)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_is_deleted ON bia_timeframes (is_deleted) (base.py:1895)
2025-06-18 17:59:47,156 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_timeframes_timeframe_name ON bia_timeframes (timeframe_name)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_timeframes_timeframe_name ON bia_timeframes (timeframe_name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_timeframe_name ON bia_timeframes (timeframe_name) (base.py:1895)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_timeframes_id ON bia_timeframes (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_timeframes_id ON bia_timeframes (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_id ON bia_timeframes (id) (base.py:1895)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_timeframes_organization_id ON bia_timeframes (organization_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_timeframes_organization_id ON bia_timeframes (organization_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_organization_id ON bia_timeframes (organization_id) (base.py:1895)
2025-06-18 17:59:47,157 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,158 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_impact_criteria (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	bia_category_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	rating_type VARCHAR(12) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(bia_category_id) REFERENCES bia_categories (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_impact_criteria (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	bia_category_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	rating_type VARCHAR(12) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(bia_category_id) REFERENCES bia_categories (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_criteria (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	bia_category_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	rating_type VARCHAR(12) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(bia_category_id) REFERENCES bia_categories (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47,158 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,158 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_criteria_bia_category_id ON bia_impact_criteria (bia_category_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_criteria_bia_category_id ON bia_impact_criteria (bia_category_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_bia_category_id ON bia_impact_criteria (bia_category_id) (base.py:1895)
2025-06-18 17:59:47,158 INFO sqlalchemy.engine.Engine [no key 0.00008s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00008s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_criteria_organization_id ON bia_impact_criteria (organization_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_criteria_organization_id ON bia_impact_criteria (organization_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_organization_id ON bia_impact_criteria (organization_id) (base.py:1895)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_criteria_name ON bia_impact_criteria (name)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_criteria_name ON bia_impact_criteria (name)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_name ON bia_impact_criteria (name) (base.py:1895)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine 
CREATE TABLE process_applications (
	process_id CHAR(32) NOT NULL, 
	application_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, application_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(application_id) REFERENCES applications (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE process_applications (
	process_id CHAR(32) NOT NULL, 
	application_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, application_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(application_id) REFERENCES applications (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_applications (
	process_id CHAR(32) NOT NULL, 
	application_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, application_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(application_id) REFERENCES applications (id)
)

 (base.py:1895)
2025-06-18 17:59:47,159 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,160 INFO sqlalchemy.engine.Engine 
CREATE TABLE process_locations (
	process_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, location_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(location_id) REFERENCES locations (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE process_locations (
	process_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, location_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(location_id) REFERENCES locations (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_locations (
	process_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, location_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(location_id) REFERENCES locations (id)
)

 (base.py:1895)
2025-06-18 17:59:47,160 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,160 INFO sqlalchemy.engine.Engine 
CREATE TABLE process_dependencies (
	upstream_process_id CHAR(32) NOT NULL, 
	downstream_process_id CHAR(32) NOT NULL, 
	PRIMARY KEY (upstream_process_id, downstream_process_id), 
	FOREIGN KEY(upstream_process_id) REFERENCES processes (id), 
	FOREIGN KEY(downstream_process_id) REFERENCES processes (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE process_dependencies (
	upstream_process_id CHAR(32) NOT NULL, 
	downstream_process_id CHAR(32) NOT NULL, 
	PRIMARY KEY (upstream_process_id, downstream_process_id), 
	FOREIGN KEY(upstream_process_id) REFERENCES processes (id), 
	FOREIGN KEY(downstream_process_id) REFERENCES processes (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_dependencies (
	upstream_process_id CHAR(32) NOT NULL, 
	downstream_process_id CHAR(32) NOT NULL, 
	PRIMARY KEY (upstream_process_id, downstream_process_id), 
	FOREIGN KEY(upstream_process_id) REFERENCES processes (id), 
	FOREIGN KEY(downstream_process_id) REFERENCES processes (id)
)

 (base.py:1895)
2025-06-18 17:59:47,160 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,161 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_impact_scale_levels (
	id CHAR(32) NOT NULL, 
	level_value INTEGER NOT NULL, 
	level_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	impact_scale_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(impact_scale_id) REFERENCES bia_impact_scales (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_impact_scale_levels (
	id CHAR(32) NOT NULL, 
	level_value INTEGER NOT NULL, 
	level_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	impact_scale_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(impact_scale_id) REFERENCES bia_impact_scales (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_scale_levels (
	id CHAR(32) NOT NULL, 
	level_value INTEGER NOT NULL, 
	level_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	impact_scale_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(impact_scale_id) REFERENCES bia_impact_scales (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47,161 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47,161 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scale_levels_id ON bia_impact_scale_levels (id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scale_levels_id ON bia_impact_scale_levels (id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_id ON bia_impact_scale_levels (id) (base.py:1895)
2025-06-18 17:59:47,161 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scale_levels_is_deleted ON bia_impact_scale_levels (is_deleted)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scale_levels_is_deleted ON bia_impact_scale_levels (is_deleted)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_is_deleted ON bia_impact_scale_levels (is_deleted) (base.py:1895)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_scale_levels_impact_scale_id ON bia_impact_scale_levels (impact_scale_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_scale_levels_impact_scale_id ON bia_impact_scale_levels (impact_scale_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_impact_scale_id ON bia_impact_scale_levels (impact_scale_id) (base.py:1895)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine 
CREATE TABLE bia_impact_criterion_levels (
	id CHAR(32) NOT NULL, 
	bia_impact_criterion_id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	level_name VARCHAR(255), 
	level_value_min FLOAT, 
	level_value_max FLOAT, 
	quantitative_level_descriptor VARCHAR(255), 
	score INTEGER NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(bia_impact_criterion_id) REFERENCES bia_impact_criteria (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


INFO:sqlalchemy.engine.Engine:
CREATE TABLE bia_impact_criterion_levels (
	id CHAR(32) NOT NULL, 
	bia_impact_criterion_id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	level_name VARCHAR(255), 
	level_value_min FLOAT, 
	level_value_max FLOAT, 
	quantitative_level_descriptor VARCHAR(255), 
	score INTEGER NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(bia_impact_criterion_id) REFERENCES bia_impact_criteria (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)


2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_criterion_levels (
	id CHAR(32) NOT NULL, 
	bia_impact_criterion_id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	level_name VARCHAR(255), 
	level_value_min FLOAT, 
	level_value_max FLOAT, 
	quantitative_level_descriptor VARCHAR(255), 
	score INTEGER NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(bia_impact_criterion_id) REFERENCES bia_impact_criteria (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47,162 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,163 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_criterion_levels_bia_impact_criterion_id ON bia_impact_criterion_levels (bia_impact_criterion_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_criterion_levels_bia_impact_criterion_id ON bia_impact_criterion_levels (bia_impact_criterion_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criterion_levels_bia_impact_criterion_id ON bia_impact_criterion_levels (bia_impact_criterion_id) (base.py:1895)
2025-06-18 17:59:47,163 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,163 INFO sqlalchemy.engine.Engine CREATE INDEX ix_bia_impact_criterion_levels_organization_id ON bia_impact_criterion_levels (organization_id)
INFO:sqlalchemy.engine.Engine:CREATE INDEX ix_bia_impact_criterion_levels_organization_id ON bia_impact_criterion_levels (organization_id)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criterion_levels_organization_id ON bia_impact_criterion_levels (organization_id) (base.py:1895)
2025-06-18 17:59:47,163 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47,163 INFO sqlalchemy.engine.Engine COMMIT
INFO:sqlalchemy.engine.Engine:COMMIT
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
INFO:backend.app.tests.conftest:db_engine: All tables created successfully for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200>.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: All tables created successfully for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200>. (conftest.py:287)
INFO:backend.app.tests.conftest:db_engine: Seeding initial data (default organization) for engine 4592251392.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Seeding initial data (default organization) for engine 4592251392. (conftest.py:293)
2025-06-18 17:59:47,164 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,165 INFO sqlalchemy.engine.Engine SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ?
INFO:sqlalchemy.engine.Engine:SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ? (base.py:1895)
2025-06-18 17:59:47,165 INFO sqlalchemy.engine.Engine [generated in 0.00015s] ('00000000000000000000000000000001',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00015s] ('00000000000000000000000000000001',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00015s] ('00000000000000000000000000000001',) (base.py:1900)
INFO:backend.app.tests.conftest:db_engine: Default organization (ID: 00000000-0000-0000-0000-000000000001) added to session for seeding.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Default organization (ID: 00000000-0000-0000-0000-000000000001) added to session for seeding. (conftest.py:318)
2025-06-18 17:59:47,166 INFO sqlalchemy.engine.Engine INSERT INTO organizations (id, name, description, industry, "isActive", "updatedAt") VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO organizations (id, name, description, industry, "isActive", "updatedAt") VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO organizations (id, name, description, industry, "isActive", "updatedAt") VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,166 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('00000000000000000000000000000001', 'Default Organization (Test)', None, None, 1)
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ('00000000000000000000000000000001', 'Default Organization (Test)', None, None, 1)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('00000000000000000000000000000001', 'Default Organization (Test)', None, None, 1) (base.py:1900)
2025-06-18 17:59:47,167 INFO sqlalchemy.engine.Engine COMMIT
INFO:sqlalchemy.engine.Engine:COMMIT
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
2025-06-18 17:59:47,167 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,168 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,168 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ('applications:create',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00010s] ('applications:create',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('applications:create',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: applications:create
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:create (conftest.py:344)
2025-06-18 17:59:47,169 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,169 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ('9aa8c372851b4bf7a744bb8b9c488636', 'applications:create', 'Permission to create applications')
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ('9aa8c372851b4bf7a744bb8b9c488636', 'applications:create', 'Permission to create applications')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('9aa8c372851b4bf7a744bb8b9c488636', 'applications:create', 'Permission to create applications') (base.py:1900)
2025-06-18 17:59:47,169 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,170 INFO sqlalchemy.engine.Engine [cached since 0.001766s ago] ('applications:read',)
INFO:sqlalchemy.engine.Engine:[cached since 0.001766s ago] ('applications:read',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.001766s ago] ('applications:read',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: applications:read
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:read (conftest.py:344)
2025-06-18 17:59:47,170 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,170 INFO sqlalchemy.engine.Engine [cached since 0.001286s ago] ('d5614d9620bb439dae3c84968c7920a0', 'applications:read', 'Permission to read applications')
INFO:sqlalchemy.engine.Engine:[cached since 0.001286s ago] ('d5614d9620bb439dae3c84968c7920a0', 'applications:read', 'Permission to read applications')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.001286s ago] ('d5614d9620bb439dae3c84968c7920a0', 'applications:read', 'Permission to read applications') (base.py:1900)
2025-06-18 17:59:47,171 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,171 INFO sqlalchemy.engine.Engine [cached since 0.002878s ago] ('applications:update',)
INFO:sqlalchemy.engine.Engine:[cached since 0.002878s ago] ('applications:update',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.002878s ago] ('applications:update',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: applications:update
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:update (conftest.py:344)
2025-06-18 17:59:47,171 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,171 INFO sqlalchemy.engine.Engine [cached since 0.002398s ago] ('8597bde3b233467fa8db3ccc6c0c3829', 'applications:update', 'Permission to update applications')
INFO:sqlalchemy.engine.Engine:[cached since 0.002398s ago] ('8597bde3b233467fa8db3ccc6c0c3829', 'applications:update', 'Permission to update applications')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.002398s ago] ('8597bde3b233467fa8db3ccc6c0c3829', 'applications:update', 'Permission to update applications') (base.py:1900)
2025-06-18 17:59:47,172 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,172 INFO sqlalchemy.engine.Engine [cached since 0.004096s ago] ('applications:delete',)
INFO:sqlalchemy.engine.Engine:[cached since 0.004096s ago] ('applications:delete',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.004096s ago] ('applications:delete',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: applications:delete
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:delete (conftest.py:344)
2025-06-18 17:59:47,172 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,173 INFO sqlalchemy.engine.Engine [cached since 0.003698s ago] ('6e1395770db5495aa0318b19b8f9ea4a', 'applications:delete', 'Permission to delete applications')
INFO:sqlalchemy.engine.Engine:[cached since 0.003698s ago] ('6e1395770db5495aa0318b19b8f9ea4a', 'applications:delete', 'Permission to delete applications')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003698s ago] ('6e1395770db5495aa0318b19b8f9ea4a', 'applications:delete', 'Permission to delete applications') (base.py:1900)
2025-06-18 17:59:47,173 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,173 INFO sqlalchemy.engine.Engine [cached since 0.005302s ago] ('users:create',)
INFO:sqlalchemy.engine.Engine:[cached since 0.005302s ago] ('users:create',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.005302s ago] ('users:create',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: users:create
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:create (conftest.py:344)
2025-06-18 17:59:47,174 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,174 INFO sqlalchemy.engine.Engine [cached since 0.004835s ago] ('2020f807d75b40ca82314a88d50a9e64', 'users:create', 'Permission to create users')
INFO:sqlalchemy.engine.Engine:[cached since 0.004835s ago] ('2020f807d75b40ca82314a88d50a9e64', 'users:create', 'Permission to create users')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.004835s ago] ('2020f807d75b40ca82314a88d50a9e64', 'users:create', 'Permission to create users') (base.py:1900)
2025-06-18 17:59:47,174 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,174 INFO sqlalchemy.engine.Engine [cached since 0.006412s ago] ('users:read',)
INFO:sqlalchemy.engine.Engine:[cached since 0.006412s ago] ('users:read',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.006412s ago] ('users:read',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: users:read
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:read (conftest.py:344)
2025-06-18 17:59:47,175 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,175 INFO sqlalchemy.engine.Engine [cached since 0.005902s ago] ('6b2f17ce2b504928818a40ead996ac97', 'users:read', 'Permission to read users')
INFO:sqlalchemy.engine.Engine:[cached since 0.005902s ago] ('6b2f17ce2b504928818a40ead996ac97', 'users:read', 'Permission to read users')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.005902s ago] ('6b2f17ce2b504928818a40ead996ac97', 'users:read', 'Permission to read users') (base.py:1900)
2025-06-18 17:59:47,175 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,175 INFO sqlalchemy.engine.Engine [cached since 0.007516s ago] ('users:update',)
INFO:sqlalchemy.engine.Engine:[cached since 0.007516s ago] ('users:update',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.007516s ago] ('users:update',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: users:update
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:update (conftest.py:344)
2025-06-18 17:59:47,176 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,176 INFO sqlalchemy.engine.Engine [cached since 0.00708s ago] ('39039bec72e6440bb775d82a09070dab', 'users:update', 'Permission to update users')
INFO:sqlalchemy.engine.Engine:[cached since 0.00708s ago] ('39039bec72e6440bb775d82a09070dab', 'users:update', 'Permission to update users')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.00708s ago] ('39039bec72e6440bb775d82a09070dab', 'users:update', 'Permission to update users') (base.py:1900)
2025-06-18 17:59:47,176 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,176 INFO sqlalchemy.engine.Engine [cached since 0.008719s ago] ('users:delete',)
INFO:sqlalchemy.engine.Engine:[cached since 0.008719s ago] ('users:delete',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.008719s ago] ('users:delete',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: users:delete
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:delete (conftest.py:344)
2025-06-18 17:59:47,177 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,177 INFO sqlalchemy.engine.Engine [cached since 0.008209s ago] ('bac602a28d264647be20d54c40876034', 'users:delete', 'Permission to delete users')
INFO:sqlalchemy.engine.Engine:[cached since 0.008209s ago] ('bac602a28d264647be20d54c40876034', 'users:delete', 'Permission to delete users')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.008209s ago] ('bac602a28d264647be20d54c40876034', 'users:delete', 'Permission to delete users') (base.py:1900)
2025-06-18 17:59:47,177 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,178 INFO sqlalchemy.engine.Engine [cached since 0.00974s ago] ('roles:create',)
INFO:sqlalchemy.engine.Engine:[cached since 0.00974s ago] ('roles:create',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.00974s ago] ('roles:create',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: roles:create
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:create (conftest.py:344)
2025-06-18 17:59:47,178 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,178 INFO sqlalchemy.engine.Engine [cached since 0.009281s ago] ('89729763e55641129ef7ad37388284aa', 'roles:create', 'Permission to create roles')
INFO:sqlalchemy.engine.Engine:[cached since 0.009281s ago] ('89729763e55641129ef7ad37388284aa', 'roles:create', 'Permission to create roles')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.009281s ago] ('89729763e55641129ef7ad37388284aa', 'roles:create', 'Permission to create roles') (base.py:1900)
2025-06-18 17:59:47,179 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,179 INFO sqlalchemy.engine.Engine [cached since 0.01086s ago] ('roles:read',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01086s ago] ('roles:read',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01086s ago] ('roles:read',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: roles:read
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:read (conftest.py:344)
2025-06-18 17:59:47,179 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,179 INFO sqlalchemy.engine.Engine [cached since 0.01045s ago] ('b3e6dbd12aa6493daea9773eb5fb9aa9', 'roles:read', 'Permission to read roles')
INFO:sqlalchemy.engine.Engine:[cached since 0.01045s ago] ('b3e6dbd12aa6493daea9773eb5fb9aa9', 'roles:read', 'Permission to read roles')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01045s ago] ('b3e6dbd12aa6493daea9773eb5fb9aa9', 'roles:read', 'Permission to read roles') (base.py:1900)
2025-06-18 17:59:47,180 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,180 INFO sqlalchemy.engine.Engine [cached since 0.01209s ago] ('roles:update',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01209s ago] ('roles:update',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01209s ago] ('roles:update',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: roles:update
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:update (conftest.py:344)
2025-06-18 17:59:47,180 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,181 INFO sqlalchemy.engine.Engine [cached since 0.01167s ago] ('07474a7024194d05bfa530760fabd137', 'roles:update', 'Permission to update roles')
INFO:sqlalchemy.engine.Engine:[cached since 0.01167s ago] ('07474a7024194d05bfa530760fabd137', 'roles:update', 'Permission to update roles')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01167s ago] ('07474a7024194d05bfa530760fabd137', 'roles:update', 'Permission to update roles') (base.py:1900)
2025-06-18 17:59:47,181 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,181 INFO sqlalchemy.engine.Engine [cached since 0.01329s ago] ('roles:delete',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01329s ago] ('roles:delete',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01329s ago] ('roles:delete',) (base.py:1900)
INFO:backend.app.tests.conftest:Seeded permission: roles:delete
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:delete (conftest.py:344)
INFO:backend.app.tests.conftest:db_engine: Yielding engine 4592251392. PRAGMAs, table creation, and seeding enabled.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Yielding engine 4592251392. PRAGMAs, table creation, and seeding enabled. (conftest.py:352)
INFO:backend.app.tests.conftest:Yielding session-scoped async DB session.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Yielding session-scoped async DB session. (conftest.py:174)
INFO:backend.app.tests.conftest:Fetching root organization for session-scoped fixtures.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Fetching root organization for session-scoped fixtures. (conftest.py:185)
2025-06-18 17:59:47,182 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,182 INFO sqlalchemy.engine.Engine SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ?
INFO:sqlalchemy.engine.Engine:SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ? (base.py:1895)
2025-06-18 17:59:47,182 INFO sqlalchemy.engine.Engine [cached since 0.01742s ago] ('00000000000000000000000000000001',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01742s ago] ('00000000000000000000000000000001',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01742s ago] ('00000000000000000000000000000001',) (base.py:1900)
INFO:backend.app.tests.conftest:Root organization 00000000-0000-0000-0000-000000000001 (Default Organization (Test)) fetched successfully.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Root organization 00000000-0000-0000-0000-000000000001 (Default Organization (Test)) fetched successfully. (conftest.py:196)
INFO:backend.app.tests.conftest:Creating BIA Impact Criteria permissions globally for the test session.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Creating BIA Impact Criteria permissions globally for the test session. (conftest.py:202)
2025-06-18 17:59:47,183 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,183 INFO sqlalchemy.engine.Engine [cached since 0.01534s ago] ('bia_impact_criteria:create',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01534s ago] ('bia_impact_criteria:create',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01534s ago] ('bia_impact_criteria:create',) (base.py:1900)
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:create'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:create'. (conftest.py:162)
2025-06-18 17:59:47,184 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,184 INFO sqlalchemy.engine.Engine [cached since 0.01587s ago] ('bia_impact_criteria:read',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01587s ago] ('bia_impact_criteria:read',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01587s ago] ('bia_impact_criteria:read',) (base.py:1900)
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:read'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:read'. (conftest.py:162)
2025-06-18 17:59:47,184 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,184 INFO sqlalchemy.engine.Engine [cached since 0.01648s ago] ('bia_impact_criteria:update',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01648s ago] ('bia_impact_criteria:update',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01648s ago] ('bia_impact_criteria:update',) (base.py:1900)
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:update'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:update'. (conftest.py:162)
2025-06-18 17:59:47,185 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,185 INFO sqlalchemy.engine.Engine [cached since 0.01705s ago] ('bia_impact_criteria:delete',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01705s ago] ('bia_impact_criteria:delete',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01705s ago] ('bia_impact_criteria:delete',) (base.py:1900)
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:delete'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:delete'. (conftest.py:162)
2025-06-18 17:59:47,185 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,185 INFO sqlalchemy.engine.Engine [cached since 0.01756s ago] ('bia_impact_criteria:list',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01756s ago] ('bia_impact_criteria:list',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01756s ago] ('bia_impact_criteria:list',) (base.py:1900)
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:list'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:list'. (conftest.py:162)
INFO:backend.app.tests.conftest:Finished setting up the test database and tables.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Finished setting up the test database and tables. (conftest.py:209)
INFO:root:File logging configured. All test session logs will be written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log
2025-06-18 17:59:47 [    INFO] root: File logging configured. All test session logs will be written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log (conftest.py:135)
DEBUG:asyncio:Using selector: KqueueSelector
2025-06-18 17:59:47,187 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,189 INFO sqlalchemy.engine.Engine SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47,189 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111c8c570>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111c8c570>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111c8c570>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111c8c570>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111c8c570>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111c8c570>) completed
WARNING:passlib.handlers.bcrypt:(trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/.venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-06-18 17:59:47 [ WARNING] passlib.handlers.bcrypt: (trapped) error reading bcrypt version (bcrypt.py:622)
Traceback (most recent call last):
  File "/Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/.venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
DEBUG:passlib.handlers.bcrypt:detected 'bcrypt' backend, version '<unknown>'
DEBUG:passlib.handlers.bcrypt:'bcrypt' backend lacks $2$ support, enabling workaround
2025-06-18 17:59:47,443 INFO sqlalchemy.engine.Engine INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,443 INFO sqlalchemy.engine.Engine [generated in 0.00023s] ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None)
INFO:sqlalchemy.engine.Engine:[generated in 0.00023s] ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00023s] ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbea0>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbea0>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbea0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbea0>) completed
INFO:backend.app.tests.conftest:Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager_for_bia@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager_for_bia@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture. (conftest.py:546)
INFO:backend.app.tests.conftest:Created test user 'bcm_manager_for_bia@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created test user 'bcm_manager_for_bia@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'. (conftest.py:547)
2025-06-18 17:59:47,445 INFO sqlalchemy.engine.Engine SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ?
INFO:sqlalchemy.engine.Engine:SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ? (base.py:1895)
2025-06-18 17:59:47,445 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ('BCM Manager', '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ('BCM Manager', '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('BCM Manager', '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbce0>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbce0>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbce0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbce0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbce0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbce0>) completed
INFO:backend.app.tests.conftest:Role 'BCM Manager' not found for org '00000000-0000-0000-0000-000000000001', creating it.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Role 'BCM Manager' not found for org '00000000-0000-0000-0000-000000000001', creating it. (conftest.py:567)
2025-06-18 17:59:47,446 INFO sqlalchemy.engine.Engine INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,446 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24340>, 'INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"', ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24340>, 'INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"', ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24340>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24340>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24340>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24340>) completed
2025-06-18 17:59:47,448 INFO sqlalchemy.engine.Engine SELECT roles.id 
FROM roles 
WHERE roles.id = ?
INFO:sqlalchemy.engine.Engine:SELECT roles.id 
FROM roles 
WHERE roles.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id 
FROM roles 
WHERE roles.id = ? (base.py:1895)
2025-06-18 17:59:47,448 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00010s] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbdc0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbdc0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbdc0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbdc0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbdc0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbdc0>) completed
2025-06-18 17:59:47,449 INFO sqlalchemy.engine.Engine SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id
INFO:sqlalchemy.engine.Engine:SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id (base.py:1895)
2025-06-18 17:59:47,449 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24500>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24500>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24500>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24500>) completed
2025-06-18 17:59:47,450 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,450 INFO sqlalchemy.engine.Engine [cached since 0.2823s ago] ('bia_impact_criteria:create',)
INFO:sqlalchemy.engine.Engine:[cached since 0.2823s ago] ('bia_impact_criteria:create',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2823s ago] ('bia_impact_criteria:create',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e246c0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:create',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e246c0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:create',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e246c0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e246c0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e246c0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e246c0>) completed
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:create'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:create'. (conftest.py:162)
INFO:backend.app.tests.conftest:Dynamically added permission 'bia_impact_criteria:create' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:create' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47,451 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,451 INFO sqlalchemy.engine.Engine [cached since 0.2833s ago] ('bia_impact_criteria:read',)
INFO:sqlalchemy.engine.Engine:[cached since 0.2833s ago] ('bia_impact_criteria:read',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2833s ago] ('bia_impact_criteria:read',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24810>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:read',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24810>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:read',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24810>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24810>) completed
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:read'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:read'. (conftest.py:162)
INFO:backend.app.tests.conftest:Dynamically added permission 'bia_impact_criteria:read' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:read' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47,452 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,452 INFO sqlalchemy.engine.Engine [cached since 0.2843s ago] ('bia_impact_criteria:update',)
INFO:sqlalchemy.engine.Engine:[cached since 0.2843s ago] ('bia_impact_criteria:update',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2843s ago] ('bia_impact_criteria:update',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e249d0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:update',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e249d0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:update',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e249d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e249d0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e249d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e249d0>) completed
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:update'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:update'. (conftest.py:162)
INFO:backend.app.tests.conftest:Dynamically added permission 'bia_impact_criteria:update' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:update' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47,453 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,453 INFO sqlalchemy.engine.Engine [cached since 0.2854s ago] ('bia_impact_criteria:delete',)
INFO:sqlalchemy.engine.Engine:[cached since 0.2854s ago] ('bia_impact_criteria:delete',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2854s ago] ('bia_impact_criteria:delete',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24b90>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:delete',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24b90>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:delete',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24b90>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24b90>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24b90>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24b90>) completed
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:delete'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:delete'. (conftest.py:162)
INFO:backend.app.tests.conftest:Dynamically added permission 'bia_impact_criteria:delete' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:delete' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47,454 INFO sqlalchemy.engine.Engine SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
INFO:sqlalchemy.engine.Engine:SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47,454 INFO sqlalchemy.engine.Engine [cached since 0.2863s ago] ('bia_impact_criteria:list',)
INFO:sqlalchemy.engine.Engine:[cached since 0.2863s ago] ('bia_impact_criteria:list',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2863s ago] ('bia_impact_criteria:list',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24d50>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:list',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24d50>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:list',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24d50>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24d50>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24d50>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24d50>) completed
INFO:backend.app.tests.conftest:Created global permission 'bia_impact_criteria:list'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:list'. (conftest.py:162)
INFO:backend.app.tests.conftest:Dynamically added permission 'bia_impact_criteria:list' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001).
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:list' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47,455 INFO sqlalchemy.engine.Engine INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id
INFO:sqlalchemy.engine.Engine:INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id (base.py:2069)
2025-06-18 17:59:47,455 INFO sqlalchemy.engine.Engine [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list')
INFO:sqlalchemy.engine.Engine:[generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list') (base.py:2088)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71650>, 'INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id', ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71650>, 'INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id', ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71650>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71650>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71650>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71650>) completed
2025-06-18 17:59:47,457 INFO sqlalchemy.engine.Engine INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)
INFO:sqlalchemy.engine.Engine:INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47,457 INFO sqlalchemy.engine.Engine [generated in 0.00012s] [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')]
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')]
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')] (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method executemany of sqlite3.Cursor object at 0x111e71490>, 'INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)', [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')])
DEBUG:aiosqlite:operation functools.partial(<built-in method executemany of sqlite3.Cursor object at 0x111e71490>, 'INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)', [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')]) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71490>) completed
2025-06-18 17:59:47,457 INFO sqlalchemy.engine.Engine SELECT roles.id 
FROM roles 
WHERE roles.id = ?
INFO:sqlalchemy.engine.Engine:SELECT roles.id 
FROM roles 
WHERE roles.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id 
FROM roles 
WHERE roles.id = ? (base.py:1895)
2025-06-18 17:59:47,458 INFO sqlalchemy.engine.Engine [cached since 0.01002s ago] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[cached since 0.01002s ago] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01002s ago] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24ea0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24ea0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24ea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24ea0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24ea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24ea0>) completed
2025-06-18 17:59:47,458 INFO sqlalchemy.engine.Engine SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id
INFO:sqlalchemy.engine.Engine:SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id (base.py:1895)
2025-06-18 17:59:47,459 INFO sqlalchemy.engine.Engine [cached since 0.009557s ago] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[cached since 0.009557s ago] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.009557s ago] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24f80>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24f80>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24f80>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24f80>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24f80>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24f80>) completed
2025-06-18 17:59:47,460 INFO sqlalchemy.engine.Engine SELECT users.id 
FROM users 
WHERE users.id = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id 
FROM users 
WHERE users.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47,460 INFO sqlalchemy.engine.Engine [generated in 0.00010s] ('6cee76f9b4184046945c5a3eace8a5fc',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00010s] ('6cee76f9b4184046945c5a3eace8a5fc',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71730>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71730>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71730>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71730>) completed
2025-06-18 17:59:47,461 INFO sqlalchemy.engine.Engine SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
INFO:sqlalchemy.engine.Engine:SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47,461 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e719d0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e719d0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e719d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e719d0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e719d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e719d0>) completed
INFO:backend.app.tests.conftest:Associated role 'BCM Manager' with user 'bcm_manager_for_bia@example.com'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Associated role 'BCM Manager' with user 'bcm_manager_for_bia@example.com'. (conftest.py:608)
2025-06-18 17:59:47,462 INFO sqlalchemy.engine.Engine INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)
INFO:sqlalchemy.engine.Engine:INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO user_roles (user_id, role_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47,463 INFO sqlalchemy.engine.Engine [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705')
INFO:sqlalchemy.engine.Engine:[generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71b90>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71b90>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71b90>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71b90>) completed
2025-06-18 17:59:47,463 INFO sqlalchemy.engine.Engine SELECT users.id 
FROM users 
WHERE users.id = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id 
FROM users 
WHERE users.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47,463 INFO sqlalchemy.engine.Engine [cached since 0.003856s ago] ('6cee76f9b4184046945c5a3eace8a5fc',)
INFO:sqlalchemy.engine.Engine:[cached since 0.003856s ago] ('6cee76f9b4184046945c5a3eace8a5fc',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003856s ago] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71810>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71810>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71810>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71810>) completed
2025-06-18 17:59:47,464 INFO sqlalchemy.engine.Engine SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
INFO:sqlalchemy.engine.Engine:SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47,464 INFO sqlalchemy.engine.Engine [cached since 0.003452s ago] ('6cee76f9b4184046945c5a3eace8a5fc',)
INFO:sqlalchemy.engine.Engine:[cached since 0.003452s ago] ('6cee76f9b4184046945c5a3eace8a5fc',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003452s ago] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71ab0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71ab0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71ab0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71ab0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71ab0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71ab0>) completed
INFO:backend.app.tests.conftest:Permissions for user 'bcm_manager_for_bia@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list']
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Permissions for user 'bcm_manager_for_bia@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list'] (conftest.py:624)
INFO:backend.app.tests.conftest:Authenticated client configured for user 'bcm_manager_for_bia@example.com' with role 'BCM Manager'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Authenticated client configured for user 'bcm_manager_for_bia@example.com' with role 'BCM Manager'. (conftest.py:634)
2025-06-18 17:59:47,527 INFO sqlalchemy.engine.Engine SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47,527 INFO sqlalchemy.engine.Engine [cached since 0.3378s ago] ('bcm_manager@example.com', '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[cached since 0.3378s ago] ('bcm_manager@example.com', '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3378s ago] ('bcm_manager@example.com', '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5340>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5340>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5340>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5340>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5340>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5340>) completed
2025-06-18 17:59:47,761 INFO sqlalchemy.engine.Engine INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"
INFO:sqlalchemy.engine.Engine:INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47,761 INFO sqlalchemy.engine.Engine [cached since 0.3186s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None)
INFO:sqlalchemy.engine.Engine:[cached since 0.3186s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3186s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5810>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5810>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5810>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5810>) completed
INFO:backend.app.tests.conftest:Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture. (conftest.py:546)
INFO:backend.app.tests.conftest:Created test user 'bcm_manager@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created test user 'bcm_manager@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'. (conftest.py:547)
2025-06-18 17:59:47,763 INFO sqlalchemy.engine.Engine SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ?
INFO:sqlalchemy.engine.Engine:SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ? (base.py:1895)
2025-06-18 17:59:47,763 INFO sqlalchemy.engine.Engine [cached since 0.3181s ago] ('BCM Manager', '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[cached since 0.3181s ago] ('BCM Manager', '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3181s ago] ('BCM Manager', '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5490>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5490>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5490>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5490>) completed
2025-06-18 17:59:47,765 INFO sqlalchemy.engine.Engine SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?)
INFO:sqlalchemy.engine.Engine:SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47,765 INFO sqlalchemy.engine.Engine [generated in 0.00018s] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00018s] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00018s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5b20>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5b20>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5b20>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5b20>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5b20>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5b20>) completed
2025-06-18 17:59:47,766 INFO sqlalchemy.engine.Engine SELECT users.id 
FROM users 
WHERE users.id = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id 
FROM users 
WHERE users.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47,766 INFO sqlalchemy.engine.Engine [cached since 0.3065s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
INFO:sqlalchemy.engine.Engine:[cached since 0.3065s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3065s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5500>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5500>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5500>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5500>) completed
2025-06-18 17:59:47,767 INFO sqlalchemy.engine.Engine SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
INFO:sqlalchemy.engine.Engine:SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47,767 INFO sqlalchemy.engine.Engine [cached since 0.3061s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
INFO:sqlalchemy.engine.Engine:[cached since 0.3061s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3061s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5c70>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5c70>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5c70>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5c70>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5c70>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5c70>) completed
INFO:backend.app.tests.conftest:Associated role 'BCM Manager' with user 'bcm_manager@example.com'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Associated role 'BCM Manager' with user 'bcm_manager@example.com'. (conftest.py:608)
2025-06-18 17:59:47,768 INFO sqlalchemy.engine.Engine INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)
INFO:sqlalchemy.engine.Engine:INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO user_roles (user_id, role_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47,768 INFO sqlalchemy.engine.Engine [cached since 0.3058s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705')
INFO:sqlalchemy.engine.Engine:[cached since 0.3058s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3058s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f10>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f10>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f10>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f10>) completed
2025-06-18 17:59:47,769 INFO sqlalchemy.engine.Engine SELECT users.id 
FROM users 
WHERE users.id = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id 
FROM users 
WHERE users.id = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47,769 INFO sqlalchemy.engine.Engine [cached since 0.3095s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
INFO:sqlalchemy.engine.Engine:[cached since 0.3095s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3095s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5ea0>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5ea0>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5ea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5ea0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5ea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5ea0>) completed
2025-06-18 17:59:47,770 INFO sqlalchemy.engine.Engine SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
INFO:sqlalchemy.engine.Engine:SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47,770 INFO sqlalchemy.engine.Engine [cached since 0.3091s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
INFO:sqlalchemy.engine.Engine:[cached since 0.3091s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3091s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5d50>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5d50>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5d50>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5d50>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5d50>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5d50>) completed
INFO:backend.app.tests.conftest:Permissions for user 'bcm_manager@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list']
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Permissions for user 'bcm_manager@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list'] (conftest.py:624)
INFO:backend.app.tests.conftest:Authenticated client configured for user 'bcm_manager@example.com' with role 'BCM Manager'.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Authenticated client configured for user 'bcm_manager@example.com' with role 'BCM Manager'. (conftest.py:634)
2025-06-18 17:59:47,772 INFO sqlalchemy.engine.Engine SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
INFO:sqlalchemy.engine.Engine:SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ?
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47,772 INFO sqlalchemy.engine.Engine [generated in 0.00012s] ('bcm_manager@example.com', '00000000000000000000000000000001')
INFO:sqlalchemy.engine.Engine:[generated in 0.00012s] ('bcm_manager@example.com', '00000000000000000000000000000001')
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('bcm_manager@example.com', '00000000000000000000000000000001') (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f80>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001'))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f80>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5f80>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5f80>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f80>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f80>) completed
2025-06-18 17:59:47,774 INFO sqlalchemy.engine.Engine SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id 
WHERE users_1.id IN (?)
INFO:sqlalchemy.engine.Engine:SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id 
WHERE users_1.id IN (?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id 
WHERE users_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47,774 INFO sqlalchemy.engine.Engine [generated in 0.00016s] ('8a7ae39f4e734a58b7ef91c0526be05a',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00016s] ('8a7ae39f4e734a58b7ef91c0526be05a',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00016s] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40500>, 'SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id \nWHERE users_1.id IN (?)', ('8a7ae39f4e734a58b7ef91c0526be05a',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40500>, 'SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id \nWHERE users_1.id IN (?)', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40500>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40500>) completed
2025-06-18 17:59:47,775 INFO sqlalchemy.engine.Engine SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" 
FROM organizations 
WHERE organizations.id IN (?)
INFO:sqlalchemy.engine.Engine:SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" 
FROM organizations 
WHERE organizations.id IN (?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" 
FROM organizations 
WHERE organizations.id IN (?) (base.py:1895)
2025-06-18 17:59:47,775 INFO sqlalchemy.engine.Engine [generated in 0.00013s] ('00000000000000000000000000000001',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00013s] ('00000000000000000000000000000001',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('00000000000000000000000000000001',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f408f0>, 'SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" \nFROM organizations \nWHERE organizations.id IN (?)', ('00000000000000000000000000000001',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f408f0>, 'SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" \nFROM organizations \nWHERE organizations.id IN (?)', ('00000000000000000000000000000001',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f408f0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f408f0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f408f0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f408f0>) completed
2025-06-18 17:59:47,778 INFO sqlalchemy.engine.Engine SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?)
INFO:sqlalchemy.engine.Engine:SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47,778 INFO sqlalchemy.engine.Engine [generated in 0.00014s] ('07407382a8034778ad26f6c74381c705',)
INFO:sqlalchemy.engine.Engine:[generated in 0.00014s] ('07407382a8034778ad26f6c74381c705',)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00014s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40e30>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',))
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40e30>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40e30>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40e30>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40e30>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40e30>) completed
ERROR2025-06-18 17:59:47,902 INFO sqlalchemy.engine.Engine ROLLBACK
INFO:sqlalchemy.engine.Engine:ROLLBACK

------------------------------ live log teardown -------------------------------
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: ROLLBACK (base.py:1122)
DEBUG:aiosqlite:executing functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:asyncio:Using selector: KqueueSelector
INFO:backend.app.tests.conftest:Closing session-scoped async DB session.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Closing session-scoped async DB session. (conftest.py:176)
2025-06-18 17:59:47,904 INFO sqlalchemy.engine.Engine ROLLBACK
INFO:sqlalchemy.engine.Engine:ROLLBACK
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: ROLLBACK (base.py:1122)
DEBUG:aiosqlite:executing functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>) completed
INFO:backend.app.tests.conftest:db_engine: Teardown for engine 4592251392.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Teardown for engine 4592251392. (conftest.py:357)
INFO:backend.app.tests.conftest:db_engine: Dropping all tables for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> using conn.run_sync in finally block...
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Dropping all tables for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> using conn.run_sync in finally block... (conftest.py:360)
2025-06-18 17:59:47,904 INFO sqlalchemy.engine.Engine BEGIN (implicit)
INFO:sqlalchemy.engine.Engine:BEGIN (implicit)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47,904 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("user_roles")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("user_roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("user_roles") (base.py:1895)
2025-06-18 17:59:47,905 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111da50a0>, 'PRAGMA main.table_info("user_roles")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111da50a0>, 'PRAGMA main.table_info("user_roles")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111da50a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111da50a0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111da50a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111da50a0>) completed
2025-06-18 17:59:47,905 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("users")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("users")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("users") (base.py:1895)
2025-06-18 17:59:47,905 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71570>, 'PRAGMA main.table_info("users")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71570>, 'PRAGMA main.table_info("users")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71570>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71570>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71570>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71570>) completed
2025-06-18 17:59:47,906 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("organizations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("organizations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("organizations") (base.py:1895)
2025-06-18 17:59:47,906 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e710a0>, 'PRAGMA main.table_info("organizations")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e710a0>, 'PRAGMA main.table_info("organizations")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e710a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e710a0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e710a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e710a0>) completed
2025-06-18 17:59:47,906 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("role_permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("role_permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("role_permissions") (base.py:1895)
2025-06-18 17:59:47,907 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71030>, 'PRAGMA main.table_info("role_permissions")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71030>, 'PRAGMA main.table_info("role_permissions")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71030>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71030>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71030>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71030>) completed
2025-06-18 17:59:47,907 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("permissions")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("permissions")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("permissions") (base.py:1895)
2025-06-18 17:59:47,907 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71420>, 'PRAGMA main.table_info("permissions")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71420>, 'PRAGMA main.table_info("permissions")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71420>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71420>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71420>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71420>) completed
2025-06-18 17:59:47,908 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("roles")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("roles")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("roles") (base.py:1895)
2025-06-18 17:59:47,908 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530420>, 'PRAGMA main.table_info("roles")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530420>, 'PRAGMA main.table_info("roles")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530420>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530420>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530420>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530420>) completed
2025-06-18 17:59:47,908 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("department_locations_association")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("department_locations_association")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("department_locations_association") (base.py:1895)
2025-06-18 17:59:47,908 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530a40>, 'PRAGMA main.table_info("department_locations_association")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530a40>, 'PRAGMA main.table_info("department_locations_association")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530a40>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530a40>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530a40>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530a40>) completed
2025-06-18 17:59:47,909 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("departments")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("departments")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("departments") (base.py:1895)
2025-06-18 17:59:47,909 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530490>, 'PRAGMA main.table_info("departments")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530490>, 'PRAGMA main.table_info("departments")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530490>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530490>) completed
2025-06-18 17:59:47,909 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_categories")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_categories")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_categories") (base.py:1895)
2025-06-18 17:59:47,910 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530500>, 'PRAGMA main.table_info("bia_categories")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530500>, 'PRAGMA main.table_info("bia_categories")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530500>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530500>) completed
2025-06-18 17:59:47,910 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_applications")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_applications") (base.py:1895)
2025-06-18 17:59:47,910 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125305e0>, 'PRAGMA main.table_info("process_applications")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125305e0>, 'PRAGMA main.table_info("process_applications")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125305e0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125305e0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125305e0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125305e0>) completed
2025-06-18 17:59:47,911 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("applications")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("applications")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("applications") (base.py:1895)
2025-06-18 17:59:47,911 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530650>, 'PRAGMA main.table_info("applications")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530650>, 'PRAGMA main.table_info("applications")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530650>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530650>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530650>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530650>) completed
2025-06-18 17:59:47,911 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_locations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_locations") (base.py:1895)
2025-06-18 17:59:47,911 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125306c0>, 'PRAGMA main.table_info("process_locations")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125306c0>, 'PRAGMA main.table_info("process_locations")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125306c0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125306c0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125306c0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125306c0>) completed
2025-06-18 17:59:47,912 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("process_dependencies")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("process_dependencies")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_dependencies") (base.py:1895)
2025-06-18 17:59:47,912 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125307a0>, 'PRAGMA main.table_info("process_dependencies")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125307a0>, 'PRAGMA main.table_info("process_dependencies")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125307a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125307a0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125307a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125307a0>) completed
2025-06-18 17:59:47,912 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("processes")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("processes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("processes") (base.py:1895)
2025-06-18 17:59:47,913 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530730>, 'PRAGMA main.table_info("processes")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530730>, 'PRAGMA main.table_info("processes")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530730>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530730>) completed
2025-06-18 17:59:47,913 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("locations")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("locations")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("locations") (base.py:1895)
2025-06-18 17:59:47,913 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530880>, 'PRAGMA main.table_info("locations")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530880>, 'PRAGMA main.table_info("locations")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530880>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530880>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530880>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530880>) completed
2025-06-18 17:59:47,914 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("vendors")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("vendors")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("vendors") (base.py:1895)
2025-06-18 17:59:47,914 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530960>, 'PRAGMA main.table_info("vendors")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112530960>, 'PRAGMA main.table_info("vendors")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530960>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112530960>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530960>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112530960>) completed
2025-06-18 17:59:47,914 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_scales")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_scales")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scales") (base.py:1895)
2025-06-18 17:59:47,914 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125308f0>, 'PRAGMA main.table_info("bia_impact_scales")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1125308f0>, 'PRAGMA main.table_info("bia_impact_scales")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125308f0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1125308f0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125308f0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1125308f0>) completed
2025-06-18 17:59:47,915 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_scale_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_scale_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scale_levels") (base.py:1895)
2025-06-18 17:59:47,915 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112448490>, 'PRAGMA main.table_info("bia_impact_scale_levels")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x112448490>, 'PRAGMA main.table_info("bia_impact_scale_levels")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112448490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x112448490>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x112448490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x112448490>) completed
2025-06-18 17:59:47,916 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_timeframes")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_timeframes")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_timeframes") (base.py:1895)
2025-06-18 17:59:47,916 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1124483b0>, 'PRAGMA main.table_info("bia_timeframes")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1124483b0>, 'PRAGMA main.table_info("bia_timeframes")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1124483b0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1124483b0>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1124483b0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1124483b0>) completed
2025-06-18 17:59:47,916 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_criteria")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_criteria")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criteria") (base.py:1895)
2025-06-18 17:59:47,916 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7490>, 'PRAGMA main.table_info("bia_impact_criteria")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7490>, 'PRAGMA main.table_info("bia_impact_criteria")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1121d7490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1121d7490>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7490>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7490>) completed
2025-06-18 17:59:47,917 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("bia_impact_criterion_levels")
INFO:sqlalchemy.engine.Engine:PRAGMA main.table_info("bia_impact_criterion_levels")
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criterion_levels") (base.py:1895)
2025-06-18 17:59:47,917 INFO sqlalchemy.engine.Engine [raw sql] ()
INFO:sqlalchemy.engine.Engine:[raw sql] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7730>, 'PRAGMA main.table_info("bia_impact_criterion_levels")', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7730>, 'PRAGMA main.table_info("bia_impact_criterion_levels")', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1121d7730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x1121d7730>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7730>) completed
2025-06-18 17:59:47,918 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_impact_criterion_levels
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_impact_criterion_levels
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_impact_criterion_levels (base.py:1895)
2025-06-18 17:59:47,918 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d79d0>, '\nDROP TABLE bia_impact_criterion_levels', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d79d0>, '\nDROP TABLE bia_impact_criterion_levels', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d79d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d79d0>) completed
2025-06-18 17:59:47,918 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_impact_scale_levels
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_impact_scale_levels
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_impact_scale_levels (base.py:1895)
2025-06-18 17:59:47,918 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7f80>, '\nDROP TABLE bia_impact_scale_levels', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7f80>, '\nDROP TABLE bia_impact_scale_levels', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7f80>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7f80>) completed
2025-06-18 17:59:47,919 INFO sqlalchemy.engine.Engine 
DROP TABLE process_dependencies
INFO:sqlalchemy.engine.Engine:
DROP TABLE process_dependencies
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE process_dependencies (base.py:1895)
2025-06-18 17:59:47,919 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7b20>, '\nDROP TABLE process_dependencies', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7b20>, '\nDROP TABLE process_dependencies', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7b20>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7b20>) completed
2025-06-18 17:59:47,919 INFO sqlalchemy.engine.Engine 
DROP TABLE process_locations
INFO:sqlalchemy.engine.Engine:
DROP TABLE process_locations
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE process_locations (base.py:1895)
2025-06-18 17:59:47,919 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7b90>, '\nDROP TABLE process_locations', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7b90>, '\nDROP TABLE process_locations', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7b90>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7b90>) completed
2025-06-18 17:59:47,920 INFO sqlalchemy.engine.Engine 
DROP TABLE process_applications
INFO:sqlalchemy.engine.Engine:
DROP TABLE process_applications
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE process_applications (base.py:1895)
2025-06-18 17:59:47,920 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7c00>, '\nDROP TABLE process_applications', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7c00>, '\nDROP TABLE process_applications', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7c00>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7c00>) completed
2025-06-18 17:59:47,920 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_impact_criteria
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_impact_criteria
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_impact_criteria (base.py:1895)
2025-06-18 17:59:47,920 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7d50>, '\nDROP TABLE bia_impact_criteria', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7d50>, '\nDROP TABLE bia_impact_criteria', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7d50>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7d50>) completed
2025-06-18 17:59:47,921 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_timeframes
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_timeframes
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_timeframes (base.py:1895)
2025-06-18 17:59:47,921 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7ea0>, '\nDROP TABLE bia_timeframes', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121d7ea0>, '\nDROP TABLE bia_timeframes', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7ea0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121d7ea0>) completed
2025-06-18 17:59:47,922 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_impact_scales
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_impact_scales
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_impact_scales (base.py:1895)
2025-06-18 17:59:47,922 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa110>, '\nDROP TABLE bia_impact_scales', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa110>, '\nDROP TABLE bia_impact_scales', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa110>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa110>) completed
2025-06-18 17:59:47,922 INFO sqlalchemy.engine.Engine 
DROP TABLE processes
INFO:sqlalchemy.engine.Engine:
DROP TABLE processes
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE processes (base.py:1895)
2025-06-18 17:59:47,922 INFO sqlalchemy.engine.Engine [no key 0.00010s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00010s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00010s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa180>, '\nDROP TABLE processes', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa180>, '\nDROP TABLE processes', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa180>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa180>) completed
2025-06-18 17:59:47,923 INFO sqlalchemy.engine.Engine 
DROP TABLE applications
INFO:sqlalchemy.engine.Engine:
DROP TABLE applications
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE applications (base.py:1895)
2025-06-18 17:59:47,923 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa1f0>, '\nDROP TABLE applications', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa1f0>, '\nDROP TABLE applications', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa1f0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa1f0>) completed
2025-06-18 17:59:47,923 INFO sqlalchemy.engine.Engine 
DROP TABLE user_roles
INFO:sqlalchemy.engine.Engine:
DROP TABLE user_roles
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE user_roles (base.py:1895)
2025-06-18 17:59:47,923 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa340>, '\nDROP TABLE user_roles', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa340>, '\nDROP TABLE user_roles', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa340>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa340>) completed
2025-06-18 17:59:47,924 INFO sqlalchemy.engine.Engine 
DROP TABLE department_locations_association
INFO:sqlalchemy.engine.Engine:
DROP TABLE department_locations_association
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE department_locations_association (base.py:1895)
2025-06-18 17:59:47,924 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa500>, '\nDROP TABLE department_locations_association', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa500>, '\nDROP TABLE department_locations_association', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa500>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa500>) completed
2025-06-18 17:59:47,924 INFO sqlalchemy.engine.Engine 
DROP TABLE role_permissions
INFO:sqlalchemy.engine.Engine:
DROP TABLE role_permissions
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE role_permissions (base.py:1895)
2025-06-18 17:59:47,924 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa5e0>, '\nDROP TABLE role_permissions', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121aa5e0>, '\nDROP TABLE role_permissions', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa5e0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121aa5e0>) completed
2025-06-18 17:59:47,925 INFO sqlalchemy.engine.Engine 
DROP TABLE users
INFO:sqlalchemy.engine.Engine:
DROP TABLE users
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE users (base.py:1895)
2025-06-18 17:59:47,925 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc650>, '\nDROP TABLE users', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc650>, '\nDROP TABLE users', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc650>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc650>) completed
2025-06-18 17:59:47,925 INFO sqlalchemy.engine.Engine 
DROP TABLE vendors
INFO:sqlalchemy.engine.Engine:
DROP TABLE vendors
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE vendors (base.py:1895)
2025-06-18 17:59:47,925 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc730>, '\nDROP TABLE vendors', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc730>, '\nDROP TABLE vendors', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc730>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc730>) completed
2025-06-18 17:59:47,926 INFO sqlalchemy.engine.Engine 
DROP TABLE locations
INFO:sqlalchemy.engine.Engine:
DROP TABLE locations
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE locations (base.py:1895)
2025-06-18 17:59:47,926 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc7a0>, '\nDROP TABLE locations', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc7a0>, '\nDROP TABLE locations', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc7a0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc7a0>) completed
2025-06-18 17:59:47,926 INFO sqlalchemy.engine.Engine 
DROP TABLE bia_categories
INFO:sqlalchemy.engine.Engine:
DROP TABLE bia_categories
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE bia_categories (base.py:1895)
2025-06-18 17:59:47,926 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc810>, '\nDROP TABLE bia_categories', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc810>, '\nDROP TABLE bia_categories', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc810>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc810>) completed
2025-06-18 17:59:47,927 INFO sqlalchemy.engine.Engine 
DROP TABLE roles
INFO:sqlalchemy.engine.Engine:
DROP TABLE roles
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE roles (base.py:1895)
2025-06-18 17:59:47,927 INFO sqlalchemy.engine.Engine [no key 0.00007s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00007s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc880>, '\nDROP TABLE roles', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc880>, '\nDROP TABLE roles', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc880>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc880>) completed
2025-06-18 17:59:47,927 INFO sqlalchemy.engine.Engine 
DROP TABLE departments
INFO:sqlalchemy.engine.Engine:
DROP TABLE departments
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE departments (base.py:1895)
2025-06-18 17:59:47,927 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc9d0>, '\nDROP TABLE departments', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cc9d0>, '\nDROP TABLE departments', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc9d0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cc9d0>) completed
2025-06-18 17:59:47,928 INFO sqlalchemy.engine.Engine 
DROP TABLE permissions
INFO:sqlalchemy.engine.Engine:
DROP TABLE permissions
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE permissions (base.py:1895)
2025-06-18 17:59:47,928 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cca40>, '\nDROP TABLE permissions', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121cca40>, '\nDROP TABLE permissions', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cca40>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121cca40>) completed
2025-06-18 17:59:47,929 INFO sqlalchemy.engine.Engine 
DROP TABLE organizations
INFO:sqlalchemy.engine.Engine:
DROP TABLE organizations
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
DROP TABLE organizations (base.py:1895)
2025-06-18 17:59:47,929 INFO sqlalchemy.engine.Engine [no key 0.00006s] ()
INFO:sqlalchemy.engine.Engine:[no key 0.00006s] ()
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
DEBUG:aiosqlite:executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121ccab0>, '\nDROP TABLE organizations', ())
DEBUG:aiosqlite:operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x1121ccab0>, '\nDROP TABLE organizations', ()) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121ccab0>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x1121ccab0>) completed
2025-06-18 17:59:47,929 INFO sqlalchemy.engine.Engine COMMIT
INFO:sqlalchemy.engine.Engine:COMMIT
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
DEBUG:aiosqlite:executing functools.partial(<built-in method commit of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method commit of sqlite3.Connection object at 0x111b99c60>) completed
DEBUG:aiosqlite:executing functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method rollback of sqlite3.Connection object at 0x111b99c60>) completed
INFO:backend.app.tests.conftest:db_engine: All tables dropped successfully for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200>.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: All tables dropped successfully for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200>. (conftest.py:365)
DEBUG:aiosqlite:executing functools.partial(<built-in method close of sqlite3.Connection object at 0x111b99c60>)
DEBUG:aiosqlite:operation functools.partial(<built-in method close of sqlite3.Connection object at 0x111b99c60>) completed
INFO:sqlalchemy.pool.impl.StaticPool:Pool recreating
2025-06-18 17:59:47 [    INFO] sqlalchemy.pool.impl.StaticPool: Pool recreating (impl.py:478)
INFO:backend.app.tests.conftest:db_engine: Engine 4592251392 disposed.
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Engine 4592251392 disposed. (conftest.py:371)
INFO:backend.app.tests.conftest:db_engine: Minimal fixture teardown complete. END
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Minimal fixture teardown complete. END (conftest.py:383)


==================================== ERRORS ====================================
_ ERROR at setup of TestBIAImpactCriteriaService.test_create_criterion_with_levels _

request = <SubRequest 'test_bia_category' for <Coroutine test_create_criterion_with_levels>>
kwargs = {'async_db_session': <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x111d9c850>, 'bcm_manager_user_async': <U...m')>, 'root_organization': <Organization(id=00000000-0000-0000-0000-000000000001, name='Default Organization (Test)')>}
unittest = False
setup = <function _wrap_async_fixture.<locals>._async_fixture_wrapper.<locals>.setup at 0x111d99ca0>

    @functools.wraps(fixture)
    def _async_fixture_wrapper(request: FixtureRequest, **kwargs: Any):
        unittest = False if pytest.version_tuple >= (8, 2) else fixturedef.unittest
        func = _perhaps_rebind_fixture_func(fixture, request.instance, unittest)
        event_loop = kwargs.pop(event_loop_fixture_id)
    
        async def setup():
            res = await func(
                **_add_kwargs(func, kwargs, event_loop_fixture_id, event_loop, request)
            )
            return res
    
>       return event_loop.run_until_complete(setup())

../.venv/lib/python3.9/site-packages/pytest_asyncio/plugin.py:369: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py:642: in run_until_complete
    return future.result()
../.venv/lib/python3.9/site-packages/pytest_asyncio/plugin.py:364: in setup
    res = await func(
app/tests/conftest.py:781: in test_bia_category
    bia_category = BIACategoryDB(
../.venv/lib/python3.9/site-packages/sqlalchemy/orm/state.py:572: in _initialize_instance
    manager.dispatch.init_failure(self, args, kwargs)
../.venv/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
../.venv/lib/python3.9/site-packages/sqlalchemy/orm/state.py:569: in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <BIACategory(id=None, name='Test BIA Category b7d71b57-1f1f-4c32-917f-f43eee6f4849', organization_id='00000000-0000-0000-0000-000000000001')>
kwargs = {'created_by_id': UUID('8a7ae39f-4e73-4a58-b7ef-91c0526be05a'), 'description': 'A test BIA category for impact criteri...A Category b7d71b57-1f1f-4c32-917f-f43eee6f4849', 'organization_id': UUID('00000000-0000-0000-0000-000000000001'), ...}
cls_ = <class 'app.models.domain.bia_categories.BIACategory'>
k = 'created_by_id'

    def _declarative_constructor(self: Any, **kwargs: Any) -> None:
        """A simple constructor that allows initialization from kwargs.
    
        Sets attributes on the constructed instance using the names and
        values in ``kwargs``.
    
        Only keys that are present as
        attributes of the instance's class are allowed. These could be,
        for example, any mapped columns or relationships.
        """
        cls_ = type(self)
        for k in kwargs:
            if not hasattr(cls_, k):
>               raise TypeError(
                    "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
                )
E               TypeError: 'created_by_id' is an invalid keyword argument for BIACategory

../.venv/lib/python3.9/site-packages/sqlalchemy/orm/decl_base.py:2173: TypeError
------------------------------ Captured log setup ------------------------------
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: START. Test session logs are being written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log (conftest.py:213)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Initializing for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite with MINIMAL setup. (conftest.py:219)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Deleting existing test database: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite (conftest.py:225)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Creating test-specific AsyncEngine with StaticPool for URL: sqlite+aiosqlite:////Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_db.sqlite (conftest.py:234)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Test-specific engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> created. PRAGMAs enabled. Table creation and seeding remain disabled. (conftest.py:241)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Successfully set up PRAGMA event listener for SQLite connections via sync_engine. (conftest.py:266)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: SQLite PRAGMA event listener configured for engine.sync_engine (for async_engine 4592251392). (conftest.py:268)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Priming engine 4592251392 to establish initial connection and apply PRAGMAs. (conftest.py:271)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: set_sqlite_pragmas: Configuring PRAGMAs for new connection 4592668528 for async_engine 4592251392. (conftest.py:247)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: set_sqlite_pragmas: PRAGMAs (WAL, foreign_keys, busy_timeout) set for connection 4592668528. (conftest.py:256)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT 1 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00009s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Successfully primed engine 4592251392 with connection 4592698768. PRAGMAs applied to this connection. (conftest.py:276)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Creating all tables for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200> using conn.run_sync... (conftest.py:282)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("user_roles") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("user_roles") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("users") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("users") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("organizations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("organizations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("role_permissions") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("role_permissions") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("permissions") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("permissions") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("roles") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("roles") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("department_locations_association") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("department_locations_association") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("departments") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("departments") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_categories") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_categories") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_applications") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_applications") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("applications") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("applications") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_locations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_locations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("process_dependencies") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("process_dependencies") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("processes") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("processes") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("locations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("locations") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("vendors") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("vendors") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scales") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_scales") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_scale_levels") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_scale_levels") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_timeframes") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_timeframes") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criteria") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_criteria") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA main.table_info("bia_impact_criterion_levels") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: PRAGMA temp.table_info("bia_impact_criterion_levels") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [raw sql] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE organizations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	industry VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_organizations_id ON organizations (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE permissions (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_permissions_id ON permissions (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE UNIQUE INDEX ix_permissions_name ON permissions (name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE departments (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	number_of_team_members INTEGER, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	department_head_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(department_head_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_departments_id ON departments (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_departments_is_deleted ON departments (is_deleted) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE roles (
	id CHAR(32) NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	description TEXT, 
	organization_id CHAR(32) NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	UNIQUE (name), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_roles_id ON roles (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_roles_organization_id ON roles (organization_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_categories (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	PRIMARY KEY (id), 
	CONSTRAINT uq_bia_category_name_organization UNIQUE (name, organization_id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE locations (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	address_line1 VARCHAR(255) NOT NULL, 
	address_line2 VARCHAR(255), 
	city VARCHAR(100) NOT NULL, 
	state_province VARCHAR(100), 
	postal_code VARCHAR(20), 
	country VARCHAR(100) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_locations_name ON locations (name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_locations_id ON locations (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_locations_organizationId" ON locations ("organizationId") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE vendors (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	contact_person VARCHAR(255), 
	contact_email VARCHAR(255), 
	contact_phone VARCHAR(50), 
	service_provided TEXT, 
	criticality VARCHAR(6) NOT NULL, 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"createdBy" CHAR(32), 
	"updatedBy" CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("createdBy") REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY("updatedBy") REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_vendors_name ON vendors (name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_vendors_id ON vendors (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_vendors_organizationId" ON vendors ("organizationId") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE users (
	id CHAR(32) NOT NULL, 
	"firstName" VARCHAR(100) NOT NULL, 
	"lastName" VARCHAR(100) NOT NULL, 
	email VARCHAR(255) NOT NULL, 
	"passwordHash" VARCHAR(255), 
	"jobTitle" VARCHAR(100), 
	"isActive" BOOLEAN NOT NULL, 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME NOT NULL, 
	"organizationId" CHAR(32) NOT NULL, 
	"departmentId" CHAR(32), 
	"locationId" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _user_email_organization_uc UNIQUE (email, "organizationId"), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY("departmentId") REFERENCES departments (id) ON DELETE SET NULL, 
	FOREIGN KEY("locationId") REFERENCES locations (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_users_email ON users (email) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_departmentId" ON users ("departmentId") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_locationId" ON users ("locationId") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_users_id ON users (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX "ix_users_organizationId" ON users ("organizationId") (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE role_permissions (
	role_id CHAR(32) NOT NULL, 
	permission_id CHAR(32) NOT NULL, 
	PRIMARY KEY (role_id, permission_id), 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE, 
	FOREIGN KEY(permission_id) REFERENCES permissions (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE department_locations_association (
	department_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (department_id, location_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id) ON DELETE CASCADE, 
	FOREIGN KEY(location_id) REFERENCES locations (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE user_roles (
	user_id CHAR(32) NOT NULL, 
	role_id CHAR(32) NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (user_id, role_id), 
	FOREIGN KEY(user_id) REFERENCES users (id) ON DELETE CASCADE, 
	FOREIGN KEY(role_id) REFERENCES roles (id) ON DELETE CASCADE
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE applications (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	type VARCHAR(5) NOT NULL, 
	"hostedOn" VARCHAR(255), 
	workarounds TEXT, 
	"derivedRTO" VARCHAR(50), 
	status VARCHAR(8) NOT NULL, 
	version VARCHAR(50), 
	vendor VARCHAR(255), 
	criticality VARCHAR(50), 
	"organizationId" CHAR(32) NOT NULL, 
	"appOwnerId" CHAR(32), 
	"createdAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updatedAt" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"createdById" CHAR(32), 
	"updatedById" CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _application_name_organization_uc UNIQUE (name, "organizationId"), 
	CONSTRAINT application_type_enum CHECK (type IN ('SAAS', 'OWNED')), 
	CONSTRAINT application_status_enum CHECK (status IN ('ACTIVE', 'INACTIVE', 'ARCHIVED')), 
	FOREIGN KEY("organizationId") REFERENCES organizations (id), 
	FOREIGN KEY("appOwnerId") REFERENCES users (id), 
	CONSTRAINT fk_application_created_by FOREIGN KEY("createdById") REFERENCES users (id) ON DELETE SET NULL, 
	CONSTRAINT fk_application_updated_by FOREIGN KEY("updatedById") REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE processes (
	id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	sla VARCHAR(255), 
	tat VARCHAR(255), 
	seasonality VARCHAR(255), 
	peak_times VARCHAR(255), 
	frequency VARCHAR(255), 
	num_team_members INTEGER, 
	rto FLOAT, 
	rpo FLOAT, 
	criticality_level VARCHAR(50), 
	department_id CHAR(32) NOT NULL, 
	process_owner_id CHAR(32), 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	CONSTRAINT _process_name_department_uc UNIQUE (name, department_id), 
	FOREIGN KEY(department_id) REFERENCES departments (id), 
	FOREIGN KEY(process_owner_id) REFERENCES users (id), 
	CONSTRAINT fk_process_created_by FOREIGN KEY(created_by_id) REFERENCES users (id), 
	CONSTRAINT fk_process_updated_by FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_scales (
	id CHAR(32) NOT NULL, 
	scale_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_id ON bia_impact_scales (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_is_deleted ON bia_impact_scales (is_deleted) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_scale_name ON bia_impact_scales (scale_name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scales_organization_id ON bia_impact_scales (organization_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_timeframes (
	id CHAR(32) NOT NULL, 
	timeframe_name VARCHAR(255) NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	organization_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_is_deleted ON bia_timeframes (is_deleted) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_timeframe_name ON bia_timeframes (timeframe_name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_id ON bia_timeframes (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_timeframes_organization_id ON bia_timeframes (organization_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_criteria (
	id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	bia_category_id CHAR(32) NOT NULL, 
	name VARCHAR(255) NOT NULL, 
	description TEXT, 
	rating_type VARCHAR(12) NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(bia_category_id) REFERENCES bia_categories (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_bia_category_id ON bia_impact_criteria (bia_category_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00008s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_organization_id ON bia_impact_criteria (organization_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criteria_name ON bia_impact_criteria (name) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_applications (
	process_id CHAR(32) NOT NULL, 
	application_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, application_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(application_id) REFERENCES applications (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_locations (
	process_id CHAR(32) NOT NULL, 
	location_id CHAR(32) NOT NULL, 
	PRIMARY KEY (process_id, location_id), 
	FOREIGN KEY(process_id) REFERENCES processes (id), 
	FOREIGN KEY(location_id) REFERENCES locations (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE process_dependencies (
	upstream_process_id CHAR(32) NOT NULL, 
	downstream_process_id CHAR(32) NOT NULL, 
	PRIMARY KEY (upstream_process_id, downstream_process_id), 
	FOREIGN KEY(upstream_process_id) REFERENCES processes (id), 
	FOREIGN KEY(downstream_process_id) REFERENCES processes (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_scale_levels (
	id CHAR(32) NOT NULL, 
	level_value INTEGER NOT NULL, 
	level_name VARCHAR(255) NOT NULL, 
	description TEXT, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	updated_at DATETIME NOT NULL, 
	is_deleted BOOLEAN NOT NULL, 
	deleted_at DATETIME, 
	impact_scale_id CHAR(32) NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(impact_scale_id) REFERENCES bia_impact_scales (id) ON DELETE CASCADE, 
	FOREIGN KEY(created_by_id) REFERENCES users (id) ON DELETE SET NULL, 
	FOREIGN KEY(updated_by_id) REFERENCES users (id) ON DELETE SET NULL
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00007s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_id ON bia_impact_scale_levels (id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_is_deleted ON bia_impact_scale_levels (is_deleted) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_scale_levels_impact_scale_id ON bia_impact_scale_levels (impact_scale_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: 
CREATE TABLE bia_impact_criterion_levels (
	id CHAR(32) NOT NULL, 
	bia_impact_criterion_id CHAR(32) NOT NULL, 
	organization_id CHAR(32) NOT NULL, 
	level_name VARCHAR(255), 
	level_value_min FLOAT, 
	level_value_max FLOAT, 
	quantitative_level_descriptor VARCHAR(255), 
	score INTEGER NOT NULL, 
	sequence_order INTEGER NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	created_by_id CHAR(32), 
	updated_by_id CHAR(32), 
	PRIMARY KEY (id), 
	FOREIGN KEY(bia_impact_criterion_id) REFERENCES bia_impact_criteria (id), 
	FOREIGN KEY(organization_id) REFERENCES organizations (id), 
	FOREIGN KEY(created_by_id) REFERENCES users (id), 
	FOREIGN KEY(updated_by_id) REFERENCES users (id)
)

 (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criterion_levels_bia_impact_criterion_id ON bia_impact_criterion_levels (bia_impact_criterion_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: CREATE INDEX ix_bia_impact_criterion_levels_organization_id ON bia_impact_criterion_levels (organization_id) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [no key 0.00006s] () (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: All tables created successfully for engine <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x111b83200>. (conftest.py:287)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Seeding initial data (default organization) for engine 4592251392. (conftest.py:293)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00015s] ('00000000000000000000000000000001',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Default organization (ID: 00000000-0000-0000-0000-000000000001) added to session for seeding. (conftest.py:318)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO organizations (id, name, description, industry, "isActive", "updatedAt") VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('00000000000000000000000000000001', 'Default Organization (Test)', None, None, 1) (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: COMMIT (base.py:1139)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('applications:create',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:create (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('9aa8c372851b4bf7a744bb8b9c488636', 'applications:create', 'Permission to create applications') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.001766s ago] ('applications:read',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:read (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.001286s ago] ('d5614d9620bb439dae3c84968c7920a0', 'applications:read', 'Permission to read applications') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.002878s ago] ('applications:update',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:update (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.002398s ago] ('8597bde3b233467fa8db3ccc6c0c3829', 'applications:update', 'Permission to update applications') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.004096s ago] ('applications:delete',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: applications:delete (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003698s ago] ('6e1395770db5495aa0318b19b8f9ea4a', 'applications:delete', 'Permission to delete applications') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.005302s ago] ('users:create',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:create (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.004835s ago] ('2020f807d75b40ca82314a88d50a9e64', 'users:create', 'Permission to create users') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.006412s ago] ('users:read',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:read (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.005902s ago] ('6b2f17ce2b504928818a40ead996ac97', 'users:read', 'Permission to read users') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.007516s ago] ('users:update',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:update (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.00708s ago] ('39039bec72e6440bb775d82a09070dab', 'users:update', 'Permission to update users') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.008719s ago] ('users:delete',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: users:delete (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.008209s ago] ('bac602a28d264647be20d54c40876034', 'users:delete', 'Permission to delete users') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.00974s ago] ('roles:create',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:create (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.009281s ago] ('89729763e55641129ef7ad37388284aa', 'roles:create', 'Permission to create roles') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01086s ago] ('roles:read',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:read (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01045s ago] ('b3e6dbd12aa6493daea9773eb5fb9aa9', 'roles:read', 'Permission to read roles') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01209s ago] ('roles:update',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:update (conftest.py:344)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01167s ago] ('07474a7024194d05bfa530760fabd137', 'roles:update', 'Permission to update roles') (base.py:1900)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01329s ago] ('roles:delete',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Seeded permission: roles:delete (conftest.py:344)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: db_engine: Yielding engine 4592251392. PRAGMAs, table creation, and seeding enabled. (conftest.py:352)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Yielding session-scoped async DB session. (conftest.py:174)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Fetching root organization for session-scoped fixtures. (conftest.py:185)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id, organizations.name, organizations.description, organizations.industry, organizations."isActive", organizations."createdAt", organizations."updatedAt" 
FROM organizations 
WHERE organizations.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01742s ago] ('00000000000000000000000000000001',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Root organization 00000000-0000-0000-0000-000000000001 (Default Organization (Test)) fetched successfully. (conftest.py:196)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Creating BIA Impact Criteria permissions globally for the test session. (conftest.py:202)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01534s ago] ('bia_impact_criteria:create',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:create'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01587s ago] ('bia_impact_criteria:read',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:read'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01648s ago] ('bia_impact_criteria:update',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:update'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01705s ago] ('bia_impact_criteria:delete',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:delete'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01756s ago] ('bia_impact_criteria:list',) (base.py:1900)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:list'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Finished setting up the test database and tables. (conftest.py:209)
2025-06-18 17:59:47 [    INFO] root: File logging configured. All test session logs will be written to: /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/backend/app/tests/test_run.log (conftest.py:135)
2025-06-18 17:59:47 [   DEBUG] asyncio: Using selector: KqueueSelector (selector_events.py:59)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: BEGIN (implicit) (base.py:1096)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111c8c570>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111c8c570>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager_for_bia@example.com', '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111c8c570>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111c8c570>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111c8c570>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111c8c570>) completed (core.py:106)
2025-06-18 17:59:47 [ WARNING] passlib.handlers.bcrypt: (trapped) error reading bcrypt version (bcrypt.py:622)
Traceback (most recent call last):
  File "/Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/.venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
2025-06-18 17:59:47 [   DEBUG] passlib.handlers.bcrypt: detected 'bcrypt' backend, version '<unknown>' (bcrypt.py:625)
2025-06-18 17:59:47 [   DEBUG] passlib.handlers.bcrypt: 'bcrypt' backend lacks $2$ support, enabling workaround (bcrypt.py:406)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00023s] ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbea0>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbea0>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('6cee76f9b4184046945c5a3eace8a5fc', 'Test', 'User', 'bcm_manager_for_bia@example.com', '$2b$12$U9VLUbnppftbgnf7TS9Mf.JKsKCrVvzXEhonoJE/k20YEkMYpGGn6', None, 1, '00000000000000000000000000000001', None, None)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbea0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbea0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager_for_bia@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture. (conftest.py:546)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created test user 'bcm_manager_for_bia@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'. (conftest.py:547)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('BCM Manager', '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbce0>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbce0>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbce0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbce0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbce0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbce0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Role 'BCM Manager' not found for org '00000000-0000-0000-0000-000000000001', creating it. (conftest.py:567)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24340>, 'INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"', ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24340>, 'INSERT INTO roles (id, name, description, organization_id, "updatedAt") VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP) RETURNING "createdAt", "updatedAt"', ('07407382a8034778ad26f6c74381c705', 'BCM Manager', None, '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24340>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24340>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24340>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24340>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id 
FROM roles 
WHERE roles.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbdc0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111dfbdc0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbdc0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111dfbdc0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbdc0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111dfbdc0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24500>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24500>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24500>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24500>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2823s ago] ('bia_impact_criteria:create',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e246c0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:create',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e246c0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:create',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e246c0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e246c0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e246c0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e246c0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:create'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:create' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2833s ago] ('bia_impact_criteria:read',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24810>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:read',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24810>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:read',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24810>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24810>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:read'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:read' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2843s ago] ('bia_impact_criteria:update',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e249d0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:update',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e249d0>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:update',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e249d0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e249d0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e249d0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e249d0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:update'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:update' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2854s ago] ('bia_impact_criteria:delete',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24b90>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:delete',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24b90>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:delete',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24b90>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24b90>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24b90>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24b90>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:delete'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:delete' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" 
FROM permissions 
WHERE permissions.name = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.2863s ago] ('bia_impact_criteria:list',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24d50>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:list',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24d50>, 'SELECT permissions.id, permissions.name, permissions.description, permissions."createdAt", permissions."updatedAt" \nFROM permissions \nWHERE permissions.name = ?', ('bia_impact_criteria:list',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24d50>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24d50>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24d50>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24d50>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created global permission 'bia_impact_criteria:list'. (conftest.py:162)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Dynamically added permission 'bia_impact_criteria:list' to role 'BCM Manager' (org: 00000000-0000-0000-0000-000000000001). (conftest.py:594)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id (base.py:2069)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00009s (insertmanyvalues) 1/1 (ordered)] ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list') (base.py:2088)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71650>, 'INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id', ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71650>, 'INSERT INTO permissions (id, name, description) VALUES (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?), (?, ?, ?) RETURNING "createdAt", "updatedAt", id', ('3c8b95fc3d5e4dffbdfe788c42a4be2b', 'bia_impact_criteria:create', 'Auto-assigned test permission: bia_impact_criteria:create', '446b8f50493c44048be4a0c92c1ef118', 'bia_impact_criteria:read', 'Auto-assigned test permission: bia_impact_criteria:read', 'bd644e84c050484e906d3d91f8ed04e0', 'bia_impact_criteria:update', 'Auto-assigned test permission: bia_impact_criteria:update', '5be46e6ce4f5419fb294732bf9bc35e0', 'bia_impact_criteria:delete', 'Auto-assigned test permission: bia_impact_criteria:delete', 'd6ed0f015c814ba3aa081b68fc961b2d', 'bia_impact_criteria:list', 'Auto-assigned test permission: bia_impact_criteria:list')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71650>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71650>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71650>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71650>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')] (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method executemany of sqlite3.Cursor object at 0x111e71490>, 'INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)', [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')]) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method executemany of sqlite3.Cursor object at 0x111e71490>, 'INSERT INTO role_permissions (role_id, permission_id) VALUES (?, ?)', [('07407382a8034778ad26f6c74381c705', 'd6ed0f015c814ba3aa081b68fc961b2d'), ('07407382a8034778ad26f6c74381c705', '446b8f50493c44048be4a0c92c1ef118'), ('07407382a8034778ad26f6c74381c705', 'bd644e84c050484e906d3d91f8ed04e0'), ('07407382a8034778ad26f6c74381c705', '5be46e6ce4f5419fb294732bf9bc35e0'), ('07407382a8034778ad26f6c74381c705', '3c8b95fc3d5e4dffbdfe788c42a4be2b')]) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71490>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71490>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id 
FROM roles 
WHERE roles.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.01002s ago] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24ea0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24ea0>, 'SELECT roles.id \nFROM roles \nWHERE roles.id = ?', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24ea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24ea0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24ea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24ea0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM permissions, role_permissions 
WHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.009557s ago] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24f80>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e24f80>, 'SELECT permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM permissions, role_permissions \nWHERE ? = role_permissions.role_id AND permissions.id = role_permissions.permission_id', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24f80>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e24f80>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24f80>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e24f80>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00010s] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71730>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71730>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71730>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71730>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71730>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71730>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e719d0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e719d0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e719d0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e719d0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e719d0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e719d0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Associated role 'BCM Manager' with user 'bcm_manager_for_bia@example.com'. (conftest.py:608)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO user_roles (user_id, role_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00011s] ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71b90>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71b90>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('6cee76f9b4184046945c5a3eace8a5fc', '07407382a8034778ad26f6c74381c705')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71b90>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71b90>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003856s ago] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71810>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71810>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71810>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71810>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.003452s ago] ('6cee76f9b4184046945c5a3eace8a5fc',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71ab0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111e71ab0>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('6cee76f9b4184046945c5a3eace8a5fc',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71ab0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111e71ab0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71ab0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111e71ab0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Permissions for user 'bcm_manager_for_bia@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list'] (conftest.py:624)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Authenticated client configured for user 'bcm_manager_for_bia@example.com' with role 'BCM Manager'. (conftest.py:634)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3378s ago] ('bcm_manager@example.com', '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5340>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5340>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5340>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5340>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5340>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5340>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt" (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3186s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5810>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5810>, 'INSERT INTO users (id, "firstName", "lastName", email, "passwordHash", "jobTitle", "isActive", "updatedAt", "organizationId", "departmentId", "locationId") VALUES (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?) RETURNING "createdAt", "updatedAt"', ('8a7ae39f4e734a58b7ef91c0526be05a', 'Test', 'User', 'bcm_manager@example.com', '$2b$12$Ic7uE1uTmpRMGw3WvwkexuXUU6dp7qWwx/aSIkEmWkNhLyh6.bh4i', None, 1, '00000000000000000000000000000001', None, None)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5810>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5810>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5810>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Session 4594452560 flushed (if necessary) after ensuring user 'bcm_manager@example.com' and role 'BCM Manager'. Commit/rollback is managed by test fixture. (conftest.py:546)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Created test user 'bcm_manager@example.com' in org '00000000-0000-0000-0000-000000000001'. Assigning role 'BCM Manager'. (conftest.py:547)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" 
FROM roles 
WHERE roles.name = ? AND roles.organization_id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3181s ago] ('BCM Manager', '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5490>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5490>, 'SELECT roles.id, roles.name, roles.description, roles.organization_id, roles."createdAt", roles."updatedAt" \nFROM roles \nWHERE roles.name = ? AND roles.organization_id = ?', ('BCM Manager', '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5490>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5490>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5490>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5490>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00018s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5b20>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5b20>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5b20>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5b20>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5b20>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5b20>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3065s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5500>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5500>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5500>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5500>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3061s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5c70>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5c70>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5c70>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5c70>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5c70>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5c70>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Associated role 'BCM Manager' with user 'bcm_manager@example.com'. (conftest.py:608)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: INSERT INTO user_roles (user_id, role_id) VALUES (?, ?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3058s ago] ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f10>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f10>, 'INSERT INTO user_roles (user_id, role_id) VALUES (?, ?)', ('8a7ae39f4e734a58b7ef91c0526be05a', '07407382a8034778ad26f6c74381c705')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f10>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f10>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id 
FROM users 
WHERE users.id = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3095s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5ea0>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5ea0>, 'SELECT users.id \nFROM users \nWHERE users.id = ?', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5ea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5ea0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5ea0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5ea0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM roles, user_roles 
WHERE ? = user_roles.user_id AND roles.id = user_roles.role_id (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [cached since 0.3091s ago] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5d50>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5d50>, 'SELECT roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM roles, user_roles \nWHERE ? = user_roles.user_id AND roles.id = user_roles.role_id', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5d50>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5d50>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5d50>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5d50>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Permissions for user 'bcm_manager@example.com' for token scopes: ['bia_impact_criteria:create', 'bia_impact_criteria:read', 'bia_impact_criteria:delete', 'bia_impact_criteria:update', 'bia_impact_criteria:list'] (conftest.py:624)
2025-06-18 17:59:47 [    INFO] backend.app.tests.conftest: Authenticated client configured for user 'bcm_manager@example.com' with role 'BCM Manager'. (conftest.py:634)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" 
FROM users 
WHERE users.email = ? AND users."organizationId" = ? (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00012s] ('bcm_manager@example.com', '00000000000000000000000000000001') (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f80>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111ed5f80>, 'SELECT users.id, users."firstName", users."lastName", users.email, users."passwordHash", users."jobTitle", users."isActive", users."createdAt", users."updatedAt", users."organizationId", users."departmentId", users."locationId" \nFROM users \nWHERE users.email = ? AND users."organizationId" = ?', ('bcm_manager@example.com', '00000000000000000000000000000001')) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5f80>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111ed5f80>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f80>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111ed5f80>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" 
FROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id 
WHERE users_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00016s] ('8a7ae39f4e734a58b7ef91c0526be05a',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40500>, 'SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id \nWHERE users_1.id IN (?)', ('8a7ae39f4e734a58b7ef91c0526be05a',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40500>, 'SELECT users_1.id AS users_1_id, roles.id AS roles_id, roles.name AS roles_name, roles.description AS roles_description, roles.organization_id AS roles_organization_id, roles."createdAt" AS "roles_createdAt", roles."updatedAt" AS "roles_updatedAt" \nFROM users AS users_1 JOIN user_roles AS user_roles_1 ON users_1.id = user_roles_1.user_id JOIN roles ON roles.id = user_roles_1.role_id \nWHERE users_1.id IN (?)', ('8a7ae39f4e734a58b7ef91c0526be05a',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40500>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40500>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40500>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" 
FROM organizations 
WHERE organizations.id IN (?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00013s] ('00000000000000000000000000000001',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f408f0>, 'SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" \nFROM organizations \nWHERE organizations.id IN (?)', ('00000000000000000000000000000001',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f408f0>, 'SELECT organizations.id AS organizations_id, organizations.name AS organizations_name, organizations.description AS organizations_description, organizations.industry AS organizations_industry, organizations."isActive" AS "organizations_isActive", organizations."createdAt" AS "organizations_createdAt", organizations."updatedAt" AS "organizations_updatedAt" \nFROM organizations \nWHERE organizations.id IN (?)', ('00000000000000000000000000000001',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f408f0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f408f0>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f408f0>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f408f0>) completed (core.py:106)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" 
FROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id 
WHERE roles_1.id IN (?) (base.py:1895)
2025-06-18 17:59:47 [    INFO] sqlalchemy.engine.Engine: [generated in 0.00014s] ('07407382a8034778ad26f6c74381c705',) (base.py:1900)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method cursor of sqlite3.Connection object at 0x111b99c60>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40e30>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method execute of sqlite3.Cursor object at 0x111f40e30>, 'SELECT roles_1.id AS roles_1_id, permissions.id AS permissions_id, permissions.name AS permissions_name, permissions.description AS permissions_description, permissions."createdAt" AS "permissions_createdAt", permissions."updatedAt" AS "permissions_updatedAt" \nFROM roles AS roles_1 JOIN role_permissions AS role_permissions_1 ON roles_1.id = role_permissions_1.role_id JOIN permissions ON permissions.id = role_permissions_1.permission_id \nWHERE roles_1.id IN (?)', ('07407382a8034778ad26f6c74381c705',)) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40e30>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method fetchall of sqlite3.Cursor object at 0x111f40e30>) completed (core.py:106)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: executing functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40e30>) (core.py:104)
2025-06-18 17:59:47 [   DEBUG] aiosqlite: operation functools.partial(<built-in method close of sqlite3.Cursor object at 0x111f40e30>) completed (core.py:106)
=============================== warnings summary ===============================
../.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:323
../.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:323
  /Users/bharats/Library/CloudStorage/OneDrive-CYRAACSERVICESPRIVATELIMITED/Work/Product Management/Replit Projects/BCMS/Windsurf/.venv/lib/python3.9/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR app/tests/services/test_bia_impact_criteria_service.py::TestBIAImpactCriteriaService::test_create_criterion_with_levels
========================= 2 warnings, 1 error in 0.88s =========================
